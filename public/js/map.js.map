{"version":3,"sources":["mapsvg.js","countrySelect.min.js","maps.js"],"names":[],"mappingsl5GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACffile":"map.js","sourcesContent":["/**\r\n * MapSVG 6.0.7 - Interactive Map Plugin\r\n *\r\n * Author: Roman S. Stepanov\r\n * http://codecanyon.net/user/Yatek/portfolio?ref=Yatek\r\n *\r\n * MapSVG page on CodeCanyon: http://codecanyon.net/item/jquery-interactive-svg-map-plugin/1694201\r\n * Licenses: http://codecanyon.net/licenses/regular_extended\r\n */\r\n(function( $ ) {\r\n\r\n    var mapSVG = {};\r\n\r\n    function isNumber(n) {\r\n        return !isNaN(parseFloat(n)) && isFinite(n);\r\n    }\r\n\r\n    function ucfirst(string){\r\n        return string.charAt(0).toUpperCase()+string.slice(1);\r\n    }\r\n\r\n    function parseBoolean (string) {\r\n        switch (String(string).toLowerCase()) {\r\n            case \"on\":\r\n            case \"true\":\r\n            case \"1\":\r\n            case \"yes\":\r\n            case \"y\":\r\n                return true;\r\n            case \"off\":\r\n            case \"false\":\r\n            case \"0\":\r\n            case \"no\":\r\n            case \"n\":\r\n                return false;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    function getStyle(elem,prop){\r\n        //if(this.attr('style')){\r\n        //    s =\r\n        //}\r\n        /*\r\n        console.log(elem.currentStyle);\r\n        //if (elem.currentStyle) {\r\n        //    var res= elem.currentStyle;\r\n        //} else if (window.getComputedStyle) {\r\nconsole.log(elem, prop, window.getComputedStyle(elem)[prop]);\r\n\r\n            if (window.getComputedStyle.getPropertyValue){\r\n                var res= window.getComputedStyle(elem, null).getPropertyValue(prop)\r\n            }else{\r\n                var res =window.getComputedStyle(elem)[prop]\r\n            };\r\n        //}\r\n        //console.log(res)\r\n        */\r\n        return res;\r\n    }\r\n\r\n    function safeURL(url){\r\n        if(url.indexOf('http://') == 0 || url.indexOf('https://') == 0)\r\n            url = \"//\"+url.split(\"://\").pop();\r\n        return url;\r\n    }\r\n\r\n    function extend(sub, base) {\r\n        sub.prototype = Object.create(base.prototype);\r\n        sub.prototype.constructor = sub;\r\n    }\r\n\r\n    function MapObject(){\r\n        this.id = \"\";\r\n    }\r\n    MapObject.prototype.getStyle = function(prop){\r\n        if(_p1 = this.attr(prop)){\r\n            return _p1;\r\n\r\n        }else if(_p2 = this.attr('style')){\r\n            var s = _p2.split(';');\r\n            var z = s.filter(function(e){\r\n                var e = e.trim();\r\n                if (e.indexOf(prop)===0)\r\n                    return e;\r\n            });\r\n            return z.length ? z[0].split(':').pop().trim() : undefined;\r\n        }\r\n        return \"\";\r\n        //else{\r\n        //    var s = this.node.closest('[style]');\r\n        //    if(s.length) {\r\n        //        s[0].getAttribute('style');\r\n        //        var s = s.split(';');\r\n        //        var z = s.filter(function (e) {\r\n        //            var e = e.trim();\r\n        //            if (e.indexOf('fill') == 0)\r\n        //                return e.split(':').pop().trim();\r\n        //        })[0];\r\n        //        return z;\r\n        //    }\r\n        //}\r\n    };\r\n    MapObject.prototype.getCenter = function(){\r\n            var x = this.node[0].getBoundingClientRect().left;\r\n            var y = this.node[0].getBoundingClientRect().top;\r\n            var w = this.node[0].getBoundingClientRect().width;\r\n            var h = this.node[0].getBoundingClientRect().height;\r\n            return [x+w/2,y+h/2];\r\n    };\r\n    MapObject.prototype.setTooltip = function(text){\r\n        this.tooltip = text ? text :  undefined;\r\n    };\r\n    MapObject.prototype.setPopover = function(text){\r\n        this.popover = text ? text :  undefined;\r\n    };\r\n    MapObject.prototype.setHref = function(url){\r\n        if (this.href && this.node.parent('a').length)\r\n            this.node.unwrap();\r\n        this.href = url ? url : undefined;\r\n        if (this.href){\r\n            var xlinkNS=\"http://www.w3.org/1999/xlink\", svgNS=\"http://www.w3.org/2000/svg\";\r\n            var a = document.createElementNS(svgNS, \"a\");\r\n            a.setAttributeNS(xlinkNS,\"href\",this.href);\r\n            if(this.target)\r\n                a.setAttribute(\"target\",this.target);\r\n            this.node.wrap($(a));\r\n        }\r\n    };\r\n    MapObject.prototype.setTarget = function(target){\r\n        this.target = target ? target : undefined;\r\n        if (this.href)\r\n            var a = this.node.parent('a')[0];\r\n        else\r\n            return;\r\n        this.target ? a.setAttribute(\"target\",target) : a.removeAttribute(\"target\");\r\n    };\r\n    MapObject.prototype.setData = function(data){\r\n\r\n        if(data){\r\n            if(typeof data == 'string'){\r\n                if(data.substr(0,1)=='[' || data.substr(0,1)=='{'){\r\n                    try{\r\n                        var tmp;\r\n                        eval('tmp = '+data);\r\n                        this.data = tmp;\r\n                    }catch(err){\r\n                        var error = \"MapSVG: Error in Data object for \"+this.mapsvg_type+\" '\"+this.id+\"'. Data object was set to empty object {}.\";\r\n                        this.data = {};\r\n                        return {_error: error};\r\n                    }\r\n                }else{\r\n                    this.data = data;\r\n                }\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            return this.data;\r\n        }else{\r\n            this.data = undefined;\r\n        }\r\n    };\r\n    MapObject.prototype.attr = function(v1,v2){\r\n        var svgDom = this.node[0];\r\n\r\n        if(typeof v1 == \"object\"){\r\n            $.each(v1,function(key,item){\r\n                if (typeof item == \"string\" || typeof item == \"number\"){\r\n                    svgDom.setAttribute(key,item);\r\n                }\r\n            });\r\n        }\r\n        else if(typeof v1 == \"string\" && (typeof v2 == \"string\" || typeof v2 == \"number\")){\r\n            svgDom.setAttribute(v1,v2);\r\n        }\r\n        else if(v2 == undefined) {\r\n            return svgDom.getAttribute(v1);\r\n        }\r\n    };\r\n    MapObject.prototype.setId = function(id){\r\n        if(!id) return false;\r\n        this.id = id;\r\n        this.node[0].setAttribute('id',id);\r\n    };\r\n\r\n\r\n    function Region(jQueryObject, globalOptions){\r\n        MapObject.call(this);\r\n\r\n        this.node = jQueryObject;\r\n        this.nodeType = jQueryObject[0].tagName;\r\n\r\n        this.id = this.node.attr('id');\r\n        this.title = this.node.attr('title');\r\n\r\n        this.node[0].setAttribute('class','mapsvg-region');\r\n        this.svg_style = {fill: this.getStyle('fill')};\r\n\r\n        this.svg_style.stroke = this.getStyle('stroke');\r\n        // Make stroke-width always the same:\r\n        if(!_browser.ie)// && !_browser.firefox)\r\n            this.node.css({'vector-effect' : 'non-scaling-stroke'});\r\n        else{\r\n            var w = this.getStyle('stroke-width');\r\n            w = w == \"1\" ? 1.2 : parseFloat(w);\r\n            this.svg_style = {'stroke-width': w.replace('px','')};\r\n        }\r\n\r\n        this.globalOptions = globalOptions;\r\n        var regionOptions  = globalOptions.regions && globalOptions.regions[this.id] ? globalOptions.regions[this.id] : null;\r\n\r\n        this.disabled      = this.getDisabledState();\r\n        this.disabled &&   this.attr('class',this.attr('class')+' mapsvg-disabled');\r\n\r\n        this.default_attr  = {};\r\n        this.selected_attr = {};\r\n        this.hover_attr    = {};\r\n        this.mapsvg_type   = 'region';\r\n\r\n        regionOptions &&  this.update(regionOptions);\r\n        this.setFill();\r\n        this.saveState();\r\n    }\r\n    extend(Region, MapObject);\r\n\r\n    Region.prototype.saveState = function(){\r\n        this.initialState = JSON.stringify(this.getOptions());\r\n    };\r\n    Region.prototype.changed = function(){\r\n        return JSON.stringify(this.getOptions()) != this.initialState;\r\n    };\r\n    Region.prototype.getOptions = function(){\r\n        var o = {id: this.id,\r\n            title: this.title,\r\n            disabled: this.disabled ? true : undefined,\r\n            fill: this.globalOptions.regions[this.id] && this.globalOptions.regions[this.id].fill,\r\n            tooltip: this.tooltip,\r\n            popover: this.popover,\r\n            href: this.href,\r\n            target: this.target,\r\n            data: this.data,\r\n            gaugeValue: this.gaugeValue\r\n        };\r\n        $.each(o,function(key,val){\r\n            if(val == undefined){\r\n                delete o[key];\r\n            }\r\n        });\r\n        return o;\r\n    };\r\n\r\n    Region.prototype.update = function(options){\r\n        for(var key in options){\r\n            // check if there's a setter for a property\r\n            var setter = 'set'+ucfirst(key);\r\n            if (setter in this)\r\n                this[setter](options[key]);\r\n            //else\r\n            //    console.log('MapSVG error: - no setter Region.'+setter);\r\n        }\r\n    };\r\n\r\n    Region.prototype.setFill = function(fill){\r\n        if(fill){\r\n            regions = {};\r\n            regions[this.id] = {fill: fill};\r\n            $.extend(true, this.globalOptions, {regions: regions});\r\n        }else if(fill == \"\" && this.globalOptions.regions && this.globalOptions.regions[this.id] && this.globalOptions.regions[this.id].fill){\r\n            //regions = {};\r\n            //regions[this.id] = {fill: undefined};\r\n            //$.extend(true, this.globalOptions, {regions: regions});\r\n            delete this.globalOptions.regions[this.id].fill;\r\n        }\r\n\r\n        // Priority: gauge > options.fill > disabled > base > svg\r\n        if(this.globalOptions.gauge.on && this.gaugeValue){\r\n            var o = this.globalOptions.gauge;\r\n            var w = (this.gaugeValue - o.min) / o.maxAdjusted;\r\n\r\n            var rgb = {\r\n                r: Math.round(o.colors.diffRGB.r * w + o.colors.lowRGB.r),\r\n                g: Math.round(o.colors.diffRGB.g * w + o.colors.lowRGB.g),\r\n                b: Math.round(o.colors.diffRGB.b * w + o.colors.lowRGB.b),\r\n                a: Math.round(o.colors.diffRGB.a * w + o.colors.lowRGB.a)\r\n            };\r\n            this.default_attr['fill'] = 'rgba(' + rgb.r + ',' + rgb.g + ',' + rgb.b + ',' + rgb.a+')';\r\n        }else if(this.globalOptions.regions[this.id] && this.globalOptions.regions[this.id].fill) {\r\n            this.default_attr['fill'] = this.globalOptions.regions[this.id].fill;\r\n        }else if(this.disabled && this.globalOptions.colors.disabled){\r\n            this.default_attr['fill'] = this.globalOptions.colors.disabled;\r\n        }else if(this.globalOptions.colors.base){\r\n            this.default_attr['fill'] = this.globalOptions.colors.base;\r\n        }else if(this.svg_style.fill!='none'){\r\n            this.default_attr['fill'] = this.svg_style.fill ? this.svg_style.fill : this.globalOptions.colors.baseDefault;\r\n        }else{\r\n            this.default_attr['fill'] = 'none';\r\n        }\r\n\r\n        if(isNumber(this.globalOptions.colors.selected))\r\n            this.selected_attr['fill'] = tinycolor(this.default_attr.fill).lighten(parseFloat(this.globalOptions.colors.selected)).toRgbString();\r\n        else\r\n            this.selected_attr['fill'] = this.globalOptions.colors.selected;\r\n\r\n        if(isNumber(this.globalOptions.colors.hover))\r\n            this.hover_attr['fill'] = tinycolor(this.default_attr.fill).lighten(parseFloat(this.globalOptions.colors.hover)).toRgbString();\r\n        else\r\n            this.hover_attr['fill'] = this.globalOptions.colors.hover;\r\n\r\n        this.node.css('fill',this.default_attr['fill']);\r\n        this.fill = this.default_attr['fill'];\r\n\r\n        if(this.globalOptions.colors.stroke != undefined)\r\n            this.node.css('stroke',this.globalOptions.colors.stroke);\r\n        else\r\n            this.node.css('stroke',this.svg_style.stroke);\r\n\r\n    };\r\n    Region.prototype.setDisabled = function(on){\r\n        this.disabled = on ? true : undefined;\r\n        on ? this.attr('class',this.attr('class')+' mapsvg-disabled') : this.attr('class',this.attr('class').replace(' mapsvg-disabled',''));\r\n        this.selected = false;\r\n        this.setFill();\r\n    };\r\n    Region.prototype.setSelected = function(on){\r\n        //this.selected = parseBoolean(on);\r\n        //_this.selectRegion(id);\r\n    };\r\n    Region.prototype.setGaugeValue = function(val){\r\n        this.gaugeValue = $.isNumeric(val) ? parseFloat(val) : undefined;\r\n    };\r\n    Region.prototype.getDisabledState = function(){\r\n        if(this.globalOptions.regions[this.id] && (this.globalOptions.regions[this.id].disabled || this.svg_style.fill == 'none') ){\r\n            return true;\r\n        }else if(\r\n            (this.globalOptions.regions[this.id] == undefined || parseBoolean(this.globalOptions.regions[this.id].disabled)) &&\r\n            (this.globalOptions.disableAll || this.svg_style.fill == 'none' || this.id == 'labels' || this.id == 'Labels')\r\n        ){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    };\r\n    Region.prototype.highlight = function(){\r\n        this.node.css({'fill' : this.hover_attr.fill});\r\n    };\r\n    Region.prototype.unhighlight = function(){\r\n        this.node.css({'fill' : this.default_attr.fill});\r\n    };\r\n    Region.prototype.select = function(){\r\n        this.node.css({'fill' : this.selected_attr.fill});\r\n        this.selected = true;\r\n    };\r\n    Region.prototype.deselect = function(){\r\n        this.node.css({'fill' : this.default_attr.fill});\r\n        this.selected = false;\r\n    };\r\n\r\n\r\n    // MARKER\r\n    function Marker(options, scale){\r\n\r\n        if(!options.id || !options.src) return false;\r\n\r\n        MapObject.call(this);\r\n\r\n        var img = document.createElementNS('http://www.w3.org/2000/svg','image');\r\n        img.setAttributeNS(null,'height', options.height);\r\n        img.setAttributeNS(null,'width',  options.width);\r\n        img.setAttributeNS('http://www.w3.org/1999/xlink','href',  options.src);\r\n        img.setAttributeNS(null,'x',  options.x);\r\n        img.setAttributeNS(null,'y',  options.y);\r\n        img.setAttributeNS(null, 'visibility', 'visible');\r\n        img.setAttribute('class','mapsvg-marker');\r\n        this.node = $(img);\r\n\r\n        this.src = options.src;\r\n        this.setId(options.id);\r\n        this.mapsvg_type = 'marker';\r\n        this.x = parseFloat(options.x);\r\n        this.y = parseFloat( options.y);\r\n        this.width = parseFloat( options.width);\r\n        this.height = parseFloat( options.height);\r\n        this.tooltip =  options.tooltip;\r\n        this.popover =  options.popover;\r\n        this.href =  options.href;\r\n        this.target =  options.target;\r\n        this.default = {x: this.x, y:this.y, width:this.width, height: this.height};\r\n        this.geoCoords = options.geoCoords;\r\n        this.data = options.data;\r\n    }\r\n    extend(Marker, MapObject);\r\n\r\n    Marker.prototype.getOptions = function(){\r\n        var o = {id: this.id,\r\n            tooltip: this.tooltip,\r\n            popover: this.popover,\r\n            href: this.href,\r\n            target: this.target,\r\n            data: this.data,\r\n            src: this.src,\r\n            width: this.default.width,\r\n            height: this.default.height,\r\n            x: this.x,\r\n            y: this.y,\r\n            geoCoords: this.geoCoords\r\n        };\r\n        $.each(o,function(key,val){\r\n            if(val == undefined){\r\n                delete o[key];\r\n            }\r\n        });\r\n        return o;\r\n    };\r\n\r\n    Marker.prototype.setXY = function(x,y){\r\n        this.x = x;\r\n        this.y = y;\r\n        this.node[0].setAttribute('x',  x);\r\n        this.node[0].setAttribute('y',  y);\r\n        this.adjustPosition(this.mapScale);\r\n    };\r\n\r\n    Marker.prototype.update = function(data, mapScale){\r\n        for(var key in data){\r\n            // check if there's a setter for a property\r\n            var setter = 'set'+ucfirst(key);\r\n            if (setter in this)\r\n                this[setter](data[key],mapScale);\r\n        }\r\n    };\r\n    Marker.prototype.setSrc = function(src, mapScale){\r\n        if(!src)\r\n            return false;\r\n        src = safeURL(src);\r\n        mapScale = mapScale || this.mapScale;\r\n        var img  = new Image();\r\n        var marker = this;\r\n        img.onload = function(){\r\n            marker.default.width = this.width;\r\n            marker.default.height = this.height;\r\n\r\n            marker.x = marker.x - (this.width - marker.width)/2;\r\n            marker.y = marker.y - (this.height - marker.height);\r\n\r\n            marker.attr({x: marker.x, y: marker.y, width: this.width, height: this.height});\r\n            marker.width = this.width;\r\n            marker.height = this.height;\r\n\r\n            marker.node[0].setAttributeNS('http://www.w3.org/1999/xlink','href', src);\r\n            marker.adjustPosition(mapScale);\r\n\r\n            marker.src = src;\r\n        };\r\n        img.src  = src;\r\n    };\r\n    Marker.prototype.adjustPosition = function(mapScale){\r\n\r\n        var w = this.default.width;\r\n        var h = this.default.height;\r\n        var dx = w/2 - w/(2*mapScale);\r\n        var dy = h - h/mapScale;\r\n        //this.x += w/2 - w/(2*mapScale);\r\n        //this.y += h - h/mapScale;\r\n        this.attr('width',w/(mapScale));\r\n        this.attr('height',h/(mapScale));\r\n        //this.attr('x',this.x);\r\n        //this.attr('y',this.y + dx);\r\n        this.attr('transform','translate('+dx+','+dy+')');\r\n        this.mapScale = mapScale;\r\n    };\r\n    // GET MARK COORDINATES TRANSLATED TO 1:1 SCALE (used when saving new added markers)\r\n    Marker.getDefaultCoords = function(markerX, markerY, markerWidth, markerHeight, mapScale){\r\n        markerX       = parseFloat(markerX);\r\n        markerY       = parseFloat(markerY);\r\n        markerWidth   = parseFloat(markerWidth);\r\n        markerHeight  = parseFloat(markerHeight);\r\n        markerX       = markerX + markerWidth/(2*mapScale) - markerWidth/2;\r\n        markerY       = markerY + markerHeight/mapScale - markerHeight;\r\n        return [markerX, markerY];\r\n    };\r\n    Marker.prototype.drag = function(startCoords, scale, endCallback, clickCallback){\r\n        _this = this;\r\n        this.ox = this.x;\r\n        this.oy = this.y;\r\n\r\n        // TODO cursor\r\n        //$('body').css('cursor','move');\r\n        //this.node.closest('svg').css('pointer-events','none');\r\n\r\n        $('body').on('mousemove.drag.mapsvg',function(e){\r\n            e.preventDefault();\r\n            //$('body').css('cursor','move');\r\n            var mouseNew = mouseCoords(e);\r\n            var dx = mouseNew.x - startCoords.x;\r\n            var dy = mouseNew.y - startCoords.y;\r\n            _this.x = _this.ox + dx/scale;\r\n            _this.y = _this.oy + dy/scale;\r\n            _this.attr({x:_this.x, y:_this.y});\r\n            //_this.attr('transform','translate('+dx/scale+','+dy/scale+')');\r\n        });\r\n        $('body').on('mouseup.drag.mapsvg',function(e){\r\n            e.preventDefault();\r\n            _this.undrag();\r\n            var mouseNew = mouseCoords(e);\r\n            var dx = mouseNew.x - startCoords.x;\r\n            var dy = mouseNew.y - startCoords.y;\r\n            _this.x = _this.ox + dx/scale;\r\n            _this.y = _this.oy + dy/scale;\r\n            _this.attr({x:_this.x, y:_this.y});\r\n            endCallback.call(_this);\r\n            if(_this.ox == _this.x && _this.oy == _this.y)\r\n                clickCallback.call(_this);\r\n        });\r\n    };\r\n    Marker.prototype.undrag = function(){\r\n        //this.node.closest('svg').css('pointer-events','auto');\r\n        //$('body').css('cursor','default');\r\n        $('body').off('.drag.mapsvg');\r\n    };\r\n    Marker.prototype.delete = function(){\r\n        if(this.href)\r\n            this.node.parent('a').empty().remove();\r\n        this.node.empty().remove();\r\n    };\r\n\r\n\r\n\r\n\r\n    var instances = {};\r\n    var globalID  = 0;\r\n    var userAgent = navigator.userAgent.toLowerCase();\r\n\r\n    // Get plugin's path\r\n    var scripts       = document.getElementsByTagName('script');\r\n    var myScript      = scripts[scripts.length - 1].src.split('/');\r\n    myScript.pop();\r\n    var pluginJSURL   =  myScript.join('/')+'/';\r\n    myScript.pop();\r\n    var pluginRootURL =  myScript.join('/')+'/';\r\n\r\n\r\n\r\n    // Check for iPad/Iphone/Andriod\r\n    var touchDevice =\r\n        (userAgent.indexOf(\"ipad\") > -1) ||\r\n        (userAgent.indexOf(\"iphone\") > -1) ||\r\n        (userAgent.indexOf(\"ipod\") > -1) ||\r\n        (userAgent.indexOf(\"android\") > -1);\r\n\r\n    var _browser = {};\r\n\r\n    _browser.ie = userAgent.indexOf(\"msie\") > -1 || userAgent.indexOf(\"Trident\") > -1 ? {} : false;\r\n    _browser.firefox = userAgent.indexOf(\"firefox\") > -1;\r\n\r\n    if (!String.prototype.trim) {\r\n        String.prototype.trim=function(){return this.replace(/^\\s+|\\s+$/g, '');};\r\n    }\r\n\r\n\r\n    // Create function for retrieving mouse coordinates\r\n    if (touchDevice){\r\n        var mouseCoords = function(e){\r\n            return e.touches[0] ?\r\n            {'x':e.touches[0].pageX, 'y':e.touches[0].pageY} :\r\n            {'x':e.changedTouches[0].pageX, 'y':e.changedTouches[0].pageY};\r\n        };\r\n    }else{\r\n        var mouseCoords = function(e){\r\n            return e.pageX ?\r\n            {'x':e.pageX, 'y':e.pageY} :\r\n            {'x':e.clientX + $(document).scrollLeft(), 'y':e.clientY + $(document).scrollTop()};\r\n\r\n        };\r\n    }\r\n\r\n    // Default options\r\n    var defaults = {\r\n        markerLastID        : 0,\r\n        width               : null,\r\n        height              : null,\r\n        lockAspectRatio     : true,\r\n        loadingText         : 'Loading map...',\r\n        //colors              : {base: \"#E1F1F1\", background: \"#eeeeee\", hover: \"#548eac\", selected: \"#065A85\", stroke: \"#7eadc0\"},\r\n        colors              : {baseDefault: \"#000000\", background: \"#eeeeee\", selected: 40, hover: 20},\r\n        regions             : {},\r\n        markers             : [],\r\n        //markerGroups        : {}, // {group_id: [marker_id, marker_id2], group_id2: [...]}\r\n        //regionGroups        : {},\r\n        viewBox             : [],\r\n        cursor              : 'default',\r\n        onClick             : null,\r\n        mouseOver           : null,\r\n        mouseOut            : null,\r\n        beforeLoad          : null,\r\n        afterLoad           : null,\r\n        zoom                : {on :false, limit: [0,10], delta: 1.2, buttons: {on: true, location: 'right'}},\r\n        scroll              : {on: false, limit: false, background: false},\r\n        responsive          : true,\r\n        tooltips            : {mode: 'off', on: false, priority: 'local'},\r\n        popovers            : {mode: \"off\", on: false, priority: 'local'},\r\n        multiSelect         : false,\r\n        gauge               : {on: false, labels: {low: \"low\", high: \"high\"}, colors: {lowRGB: null, highRGB: null, low: \"#550000\", high: \"#ee0000\"}, min: 0, max: 0},\r\n        menu                : {on: false, containerId: \"\", template: function(region){\r\n    return '<li><a href=\"#' + region.id + '\">' + (region.title||region.id) + '</a></li>'\r\n}}\r\n    };\r\n\r\n    // Default marker style\r\n    var markerOptions = {'src': pluginRootURL+'markers/pin1_red.png'};\r\n\r\n\r\n    /** Main Class **/\r\n    mapSVG = function(elem, options){\r\n\r\n        var _data;\r\n\r\n        this.methods = {\r\n            mouseCoords : mouseCoords,\r\n            functionFromString: function(string){\r\n                var func;\r\n                var error = false;\r\n                var fn = string;\r\n                if(fn.indexOf(\"{\")==-1 || fn.indexOf(\"function\")==-1 || fn.indexOf(\"(\")==-1){\r\n                    return {error: \"MapSVG user function error: no function body.\"};\r\n                }\r\n                var fnBody = fn.substring(fn.indexOf(\"{\") + 1, fn.lastIndexOf(\"}\"));\r\n                var params = fn.substring(fn.indexOf(\"(\") + 1, fn.indexOf(\")\"));\r\n                try{\r\n                    func = new Function(params,fnBody);\r\n                    success = true;\r\n                }catch(err){\r\n                    error = err;\r\n                }\r\n                if (!error)\r\n                    return func;\r\n                else\r\n                    return {error: {line: error.line, text: \"MapSVG user function error: (line \"+error.line+\"): \"+error.message}};\r\n            },\r\n            getOptions: function(forTemplate, forWeb){\r\n                var options = $.extend(true, {}, _data.options);\r\n                options.viewBox = _data._viewBox;\r\n                // _data._viewBox = (_data.options.viewBox.length && _data.options.viewBox) || _data.viewBoxShift || _data.svgDefault.viewBox;\r\n\r\n                delete options.markers;\r\n                //var region = {id: \"\", title: \"\", disabled: false, selected: false,\r\n                //    attr: {fill: \"\", href: \"\", target: \"\"}, tooltip: \"\", popover: \"\", gaugeValue:\r\n                if (forTemplate){\r\n                    options.regions = [];\r\n                    _data.regions.forEach(function(r){\r\n                        options.regions.push(r.getOptions());\r\n                    });\r\n                    options.markers = _data.options.markers;\r\n                }else{\r\n                    _data.regions.forEach(function(r){\r\n                        r.changed() && (options.regions[r.id] = r.getOptions());\r\n                    });\r\n                    if(_data.markers.length > 0)\r\n                        options.markers = [];\r\n                    _data.markers.forEach(function(m){\r\n                        options.markers.push(m.getOptions());\r\n                    });\r\n                }\r\n\r\n\r\n                if(forWeb)\r\n                    $.each(options,function(key,val){\r\n                        if(JSON.stringify(val)==JSON.stringify(defaults[key]))\r\n                            delete options[key];\r\n                    });\r\n                return options;\r\n            },\r\n            // SETTERS\r\n            update : function(options){\r\n                for (var key in options){\r\n                    if (key == \"regions\"){\r\n                        $.each(options.regions,function(id,regionOptions){\r\n                            var region = _this.getRegion(id);\r\n                            region && region.update(regionOptions);\r\n                            if(regionOptions.gaugeValue!=undefined){\r\n                                _this.updateGaugeMinMax();\r\n                                _this.regionsRedrawColors();\r\n                            }\r\n                            if(regionOptions.disabled!=undefined || regionOptions.color!=undefined){\r\n                                _this.deselectRegion(region);\r\n                            }\r\n                        });\r\n                    }else if (key == \"markers\"){\r\n                        $.each(options.markers,function(id,markerOptions){\r\n                            var marker = _this.getMarker(id);\r\n                            if(markerOptions.geoCoords){\r\n                                if(typeof markerOptions.geoCoords == \"string\"){\r\n                                    markerOptions.geoCoords = markerOptions.geoCoords.trim().split(',');\r\n                                    markerOptions.geoCoords = [parseFloat(markerOptions.geoCoords[0]),parseFloat(markerOptions.geoCoords[1])];\r\n                                }\r\n                                if(typeof markerOptions.geoCoords == 'object' && markerOptions.geoCoords.length==2){\r\n                                    if($.isNumeric(markerOptions.geoCoords[0]) && $.isNumeric(markerOptions.geoCoords[1])){\r\n                                        var xy = _this.convertGeoToPixel(markerOptions.geoCoords);\r\n                                        xy[0] = xy[0] - marker.width / 2 + .3;\r\n                                        xy[1] = (xy[1] - marker.height) + 1.5;\r\n                                        marker.setXY(xy[0],xy[1]);\r\n                                    }\r\n                                    //delete markerOptions.geoCoords;\r\n                                }\r\n                            }else{\r\n                                marker && marker.update(markerOptions);\r\n                            }\r\n\r\n\r\n                        });\r\n                    }else{\r\n                        var setter = 'set'+ucfirst(key);\r\n                        if (_this.hasOwnProperty(setter))\r\n                            this[setter](options[key]);\r\n                        else\r\n                            console.log('MapSVG Error: no setter '+setter+'()');\r\n                    }\r\n                }\r\n            },\r\n            setTitle: function(title){\r\n                title && (_data.options.title = title);\r\n            },\r\n            setDisableLinks: function(on){\r\n                on = parseBoolean(on);\r\n                if(on){\r\n                    _data.$map.on('click.a.mapsvg','a',function(e){\r\n                        e.preventDefault();\r\n                    });\r\n                }else{\r\n                    _data.$map.off('click.a.mapsvg');\r\n                }\r\n                _data.disableLinks = on;\r\n            },\r\n            setLoadingText: function(val){_data.options.loadingText = val},\r\n            setLockAspectRatio: function(val){ _data.options.lockAspectRatio =  parseBoolean(val);},\r\n            setOnClick: function(h){_data.options.onClick = h || undefined;},\r\n            setMouseOver: function(h){_data.options.mouseOver = h || undefined;},\r\n            setMouseOut: function(h){_data.options.mouseOut = h || undefined;},\r\n            setBeforeLoad: function(h){_data.options.beforeLoad = h || undefined;},\r\n            setAfterLoad: function(h){_data.options.afterLoad = h || undefined;},\r\n            setMarkerEditHandler : function(handler){\r\n                _data.markerEditHandler = handler;\r\n            },\r\n            setRegionEditHandler : function(handler){\r\n                _data.regionEditHandler = handler;\r\n            },\r\n            setColors : function(colors){\r\n                $.extend(true, _data.options, {colors:colors});\r\n                //_data.$map.css({'background': _data.options.colors.background});\r\n                //if(colors.stroke)\r\n                //    _data.regions.forEach(function(r){\r\n                //        //if (r.default_attr['stroke'] == _data.options.colors.stroke)\r\n                //        //    r.default_attr['stroke'] = color;\r\n                //        r.node.css('stroke',colors.stroke);\r\n                //    });\r\n                $.each(_data.options.colors,function(key, color){\r\n                    if(color === null || color == \"\")\r\n                        delete color[key];\r\n                });\r\n                if(colors.background)\r\n                    _data.$map.css({'background': _data.options.colors.background});\r\n                if(colors.hover)\r\n                    _data.options.colors.hover = (colors.hover == \"\"+parseInt(colors.hover)) ? parseInt(colors.hover) : colors.hover;\r\n                if(colors.selected)\r\n                    _data.options.colors.selected = (colors.selected == \"\"+parseInt(colors.selected)) ? parseInt(colors.selected) : colors.selected;\r\n                _this.regionsRedrawColors();\r\n            },\r\n            setTooltips : function (options) {\r\n\r\n                if (typeof options.mode == \"string\" && options.mode.indexOf(\"function\") == 0)\r\n                    options.mode = _this.functionFromString(options.mode);\r\n                else if(!options.mode)\r\n                    options.mode = 'off';\r\n\r\n                _data.options.tooltips.on = _data.options.tooltips.mode!='off';\r\n\r\n                $.extend(true, _data.options, {tooltips: options});\r\n\r\n                if(!_data.mapTip){\r\n                    _data.mapTip = $('<div />').addClass('mapsvg-tooltip');\r\n                    $(\"body\").append(_data.mapTip);\r\n                }\r\n\r\n                if (!_data.tooltipWatchMouseHandler) {\r\n                    $('body').on('mousemove.tooltip.mapsvg', function(e){\r\n                        window.m = mouseCoords(e);\r\n                        _data.mapTip.css('left', e.clientX + $(window).scrollLeft()).css('top', e.clientY + $(window).scrollTop() + 25);\r\n                        //_data.mapTip.css('transform', 'translate(' + window.m.x + 'px,' + (window.m.y + 30) + 'px)');\r\n                    });\r\n                }\r\n\r\n            },\r\n            setPopovers : function (options){\r\n                if (typeof options.mode == \"string\" && options.mode.indexOf(\"function\") == 0){\r\n                    options.mode = _this.functionFromString(options.mode);\r\n                }else if(!options.mode){\r\n                    options.mode = 'off'\r\n                }\r\n                $.extend(true, _data.options, {popovers: options});\r\n                _data.options.popovers.on = _data.options.popovers.mode!='off';\r\n\r\n                if(!_data.mapPopover) {\r\n                    _data.mapPopover = $('<div />').addClass('mapsvg-popover');\r\n                    _data.mapPopover.closeButton = $('<div class=\"mapsvg-popover-close\">&#10005;</div>');\r\n                    _data.mapPopover.contentDiv = $('<div class=\"mapsvg-popover-content\"></div>');\r\n                    _data.mapPopover.append(_data.mapPopover.contentDiv);\r\n                    _data.mapPopover.append(_data.mapPopover.closeButton);\r\n                    _data.mapPopover.css({\r\n                        width: _data.options.popovers.width + (_data.options.popovers.width == 'auto' ? '' : 'px'),\r\n                        height: _data.options.popovers.height + (_data.options.popovers.height == 'auto' ? '' : 'px')\r\n                    });\r\n                    _data.mapPopover.closeButton.on('click', _this.hidePopover);\r\n                    $(\"body\").append(_data.mapPopover);\r\n                }\r\n\r\n                $('body').off('.popover.mapsvg', _this.popoverOffHandler);\r\n                $('body').on('mousedown.popover.mapsvg touchstart.popover.mapsvg', _this.popoverOffHandler);\r\n\r\n\r\n            },\r\n            setInitialViewBox : function(v){\r\n                if(typeof v == 'string')\r\n                    v = v.trim().split(' ');\r\n                // TODO is this OK?\r\n                _data._viewBox = [parseFloat(v[0]), parseFloat(v[1]), parseFloat(v[2]), parseFloat(v[3])];\r\n                _data.zoomLevel = 0;\r\n            },\r\n            setViewBox : function(v,skipAdjustments){\r\n\r\n                if(typeof v == 'string'){\r\n                    v = v.trim().split(' ');\r\n                    //var coords = _this.getRegion(v).getBBox();\r\n                    //_data.viewBox = [coords.x-5, coords.y-5, coords.width+10, coords.height+10];\r\n                    //var isZooming = true;\r\n                }\r\n                var d = (v && v.length==4) ? v : _data.svgDefault.viewBox;\r\n                var isZooming = parseInt(d[2]) != _data.viewBox[2] || parseInt(d[3]) != _data.viewBox[3];\r\n                _data.viewBox = [parseFloat(d[0]), parseFloat(d[1]), parseFloat(d[2]), parseFloat(d[3])];\r\n\r\n                if(!v){\r\n                    _data._viewBox = _data.viewBox;\r\n                    _data._scale = 1;\r\n                }\r\n                _data.$svg[0].setAttribute('viewBox',_data.viewBox.join(' '));\r\n\r\n                _this.setResponsive(_data.options.responsive,true);\r\n                if(isZooming && !skipAdjustments){\r\n                    _data.scale = _this.getScale();\r\n                    _this.markersAdjustPosition();\r\n                    if(_browser.ie){// || _browser.firefox){\r\n                        _this.mapAdjustStrokes();\r\n                    }\r\n                }\r\n                return true;\r\n            },\r\n            setSize : function( width, height, responsive ){\r\n\r\n                // Convert strings to numbers\r\n                _data.options.width      = parseFloat(width);\r\n                _data.options.height     = parseFloat(height);\r\n                _data.options.responsive = responsive!=null ? parseBoolean(responsive) : _data.options.responsive;\r\n\r\n                // Calculate width and height\r\n                if ((!_data.options.width && !_data.options.height)){\r\n                    _data.options.width\t = _data.svgDefault.width;\r\n                    _data.options.height = _data.svgDefault.height;\r\n                }else if (!_data.options.width && _data.options.height){\r\n                    _data.options.width\t = parseInt(_data.options.height * _data.svgDefault.width / _data.svgDefault.height);\r\n                }else if (_data.options.width && !_data.options.height){\r\n                    _data.options.height = parseInt(_data.options.width * _data.svgDefault.height/_data.svgDefault.width);\r\n                }\r\n\r\n                //if(_data.options.responsive){\r\n                //    var maxWidth  = _data.options.width;\r\n                //    var maxHeight = _data.options.height;\r\n                //    _data.options.width\t = _data.svgDefault.width;\r\n                //    _data.options.height = _data.svgDefault.height;\r\n                //}\r\n\r\n                _data.whRatio      = _data.options.width / _data.options.height;\r\n                _data.scale        = _this.getScale();\r\n\r\n                _this.setResponsive(responsive);\r\n\r\n                if(_data.markers)\r\n                    _this.markersAdjustPosition();\r\n\r\n                return [_data.options.width, _data.options.height];\r\n            },\r\n            setResponsive : function(on,force){\r\n                //if(parseBoolean(on)==_data.options.responsive)\r\n                //    return false;\r\n                on = on!=undefined ? parseBoolean(on) : _data.options.responsive;\r\n                $(window).off('resize.mapsvg');\r\n\r\n                if(on){\r\n                    $(window).on('resize.mapsvg', _this.updateSize);\r\n                    // todo fix this!\r\n                    //if(force)\r\n                    //    if(_data.$map.width()>=_data.$map.height())\r\n                    //        force = true;\r\n                    //    else\r\n                    //        force = false;\r\n                    //if(force)\r\n                        if(!_data.$map.hasClass('mapsvg-responsive')){\r\n                            _data.$map.addClass('mapsvg-responsive');\r\n                            _data.$map.css({\r\n                                'width': 'auto',\r\n                                'height': 'auto'\r\n                            });\r\n                            if(_browser.ie){\r\n                                _data.$map.height(_data.$map.width()  / _data.whRatio);\r\n\r\n                                $(window).on('resize.mapsvg', function(){\r\n                                    _data.$map.height(_data.$map.width() / _data.whRatio);\r\n                                });\r\n                            }\r\n                        }\r\n                }else{\r\n                    _data.$map.removeClass('mapsvg-responsive');\r\n                    _data.$map.css({\r\n                        'width': _data.options.width+'px',\r\n                        'height': _data.options.height+'px'\r\n                    });\r\n                }\r\n                $.extend(true, _data.options, {responsive: on});\r\n            },\r\n            setScroll : function(options){\r\n                options.on != null && (options.on = parseBoolean(options.on));\r\n                options.limit != null && (options.limit = parseBoolean(options.limit));\r\n                $.extend(true, _data.options, {scroll: options});\r\n                _this.setEventHandlers();\r\n            },\r\n            setZoom : function (options){\r\n                options = options || {};\r\n                options.on != undefined && (options.on = parseBoolean(options.on));\r\n                options.delta && (options.delta = parseFloat(options.delta));\r\n                if(options.limit){\r\n                    if(typeof options.limit == 'string')\r\n                        options.limit = options.limit.split(';');\r\n                    options.limit = [parseInt(options.limit[0]),parseInt(options.limit[1])];\r\n                }\r\n                //(options.buttons && options.buttons.on) && (options.buttons.on = parseBoolean(options.buttons.on));\r\n                $.extend(true, _data.options, {zoom: options});\r\n                _data.$map.off('mousewheel.mapsvg');\r\n\r\n                if(_data.options.zoom.on){\r\n                    _data.$map.on('mousewheel.mapsvg',function(event, delta, deltaX, deltaY) {\r\n                        var d = delta > 0 ? 1 : -1;\r\n                        _this.zoom(d);\r\n                        return false;\r\n                    });\r\n                }\r\n                _this.setZoomButtons();\r\n            },\r\n            setZoomButtons : function(){\r\n                var loc = _data.options.zoom.buttons.location || 'hide';\r\n                if(! _data.zoomButtons){\r\n\r\n                    var buttons = $('<div />').addClass('mapsvg-buttons');\r\n\r\n                    buttons.zoomIn = $('<div />').addClass('mapsvg-btn-zoom in');\r\n                    buttons.zoomIn.on('click',function(e){\r\n                        e.stopPropagation();\r\n                        _this.zoomIn();\r\n                    });\r\n\r\n                    buttons.zoomOut = $('<div />').addClass('mapsvg-btn-zoom out');\r\n                    buttons.zoomOut.on('click',function(e){\r\n                        e.stopPropagation();\r\n                        _this.zoomOut();\r\n                    });\r\n                    buttons.append(buttons.zoomIn).append(buttons.zoomOut);\r\n                    _data.zoomButtons = buttons;\r\n                    _data.$map.append(_data.zoomButtons);\r\n                }\r\n                loc == 'right' && _data.zoomButtons.css({right: '15px', left: 'auto'})\r\n                ||\r\n                loc == 'left' && _data.zoomButtons.css({right: 'auto', left: '15px'});\r\n\r\n                (_data.options.zoom.on &&  loc!='hide') ? _data.zoomButtons.show() : _data.zoomButtons.hide();\r\n            },\r\n            setCursor : function(type){\r\n                type = type == 'pointer' ? 'pointer' : 'default';\r\n                _data.options.cursor = type;\r\n                if(type == 'pointer')\r\n                    _data.$map.addClass('mapsvg-cursor-pointer');\r\n                else\r\n                    _data.$map.removeClass('mapsvg-cursor-pointer');\r\n            },\r\n            setPreloaderText : function(text){\r\n                _data.options.loadingText = text;\r\n            },\r\n            setMultiSelect : function (on){\r\n                _data.options.multiSelect = parseBoolean(on);\r\n                _this.deselectAllRegions();\r\n            },\r\n            setGauge : function (options){\r\n\r\n                options = options || _data.options.gauge;\r\n                options.on != undefined && (options.on = parseBoolean(options.on));\r\n                $.extend(true, _data.options, {gauge: options});\r\n\r\n                var needsRedraw = false;\r\n\r\n                if(!_data.$gauge){\r\n                    _data.$gauge = {};\r\n                    _data.$gauge.gradient = $('<td>&nbsp;</td>').addClass('mapsvg-gauge-gradient');\r\n                    _this.setGaugeGradientCSS();\r\n                    _data.$gauge.container = $('<div />').addClass('mapsvg-gauge').hide();\r\n                    _data.$gauge.table = $('<table />');\r\n                    var tr = $('<tr />');\r\n                    _data.$gauge.labelLow = $('<td>'+_data.options.gauge.labels.low+'</td>');\r\n                    _data.$gauge.labelHigh = $('<td>'+_data.options.gauge.labels.high+'</td>');\r\n                    tr.append(_data.$gauge.labelLow);\r\n                    tr.append(_data.$gauge.gradient);\r\n                    tr.append(_data.$gauge.labelHigh);\r\n                    _data.$gauge.table.append(tr);\r\n                    _data.$gauge.container.append(_data.$gauge.table);\r\n                    _data.$map.append(_data.$gauge.container);\r\n                }\r\n\r\n                if (!_data.options.gauge.on && _data.$gauge.container.is(\":visible\")){\r\n                    _data.$gauge.container.hide();\r\n                    needsRedraw = true;\r\n                }else if(_data.options.gauge.on && !_data.$gauge.container.is(\":visible\")){\r\n                    _data.$gauge.container.show();\r\n                    needsRedraw = true;\r\n                }\r\n\r\n                if(options.colors){\r\n                    _data.options.gauge.colors.lowRGB = tinycolor(_data.options.gauge.colors.low).toRgb();\r\n                    _data.options.gauge.colors.highRGB = tinycolor(_data.options.gauge.colors.high).toRgb();\r\n                    _data.options.gauge.colors.diffRGB = {\r\n                        r: _data.options.gauge.colors.highRGB.r - _data.options.gauge.colors.lowRGB.r,\r\n                        g: _data.options.gauge.colors.highRGB.g - _data.options.gauge.colors.lowRGB.g,\r\n                        b: _data.options.gauge.colors.highRGB.b - _data.options.gauge.colors.lowRGB.b,\r\n                        a: _data.options.gauge.colors.highRGB.a - _data.options.gauge.colors.lowRGB.a\r\n                    };\r\n                    needsRedraw = true;\r\n                    _data.$gauge && _this.setGaugeGradientCSS();\r\n                }\r\n\r\n                if(options.labels){\r\n                    _data.$gauge.labelLow.html(_data.options.gauge.labels.low);\r\n                    _data.$gauge.labelHigh.html(_data.options.gauge.labels.high);\r\n                }\r\n\r\n                needsRedraw && _this.redrawGauge();\r\n            },\r\n            redrawGauge : function(){\r\n                _this.updateGaugeMinMax();\r\n                _this.regionsRedrawColors();\r\n            },\r\n            updateGaugeMinMax : function(){\r\n                _data.options.gauge.min = 0;\r\n                _data.options.gauge.max = false;\r\n                var values = [];\r\n                _data.regions.forEach(function(r){\r\n                    if(r.gaugeValue!=null && r.gaugeValue!=undefined) values.push(r.gaugeValue);\r\n                });\r\n                if(values.length>0){\r\n                    _data.options.gauge.min = values.length == 1 ? 0 : Math.min.apply(null,values);\r\n                    _data.options.gauge.max = Math.max.apply(null,values);\r\n                    _data.options.gauge.maxAdjusted = _data.options.gauge.max - _data.options.gauge.min;\r\n                }\r\n            },\r\n            setGaugeGradientCSS: function(){\r\n                _data.$gauge.gradient.css({\r\n                    background: _data.options.gauge.colors.low,\r\n                    background: '-moz-linear-gradient(left, ' + _data.options.gauge.colors.low + ' 1%,' + _data.options.gauge.colors.high + ' 100%)',\r\n                    background: '-webkit-gradient(linear, left top, right top, color-stop(1%,' + _data.options.gauge.colors.low + '), color-stop(100%,' + _data.options.gauge.colors.high + '))',\r\n                    background: '-webkit-linear-gradient(left, ' + _data.options.gauge.colors.low + ' 1%,' + _data.options.gauge.colors.high + ' 100%)',\r\n                    background: '-o-linear-gradient(left, ' + _data.options.gauge.colors.low + ' 1%,' + _data.options.gauge.colors.high + ' 100% 100%)',\r\n                    background: '-ms-linear-gradient(left,  ' + _data.options.gauge.colors.low + ' 1%,' + _data.options.gauge.colors.high + ' 100% 100%)',\r\n                    background: 'linear-gradient(to right,' + _data.options.gauge.colors.low + ' 1%,' + _data.options.gauge.colors.high + ' 100%)',\r\n                    'filter': 'progid:DXImageTransform.Microsoft.gradient( startColorstr=\"' + _data.options.gauge.colors.low + '\", endColorstr=\"' + _data.options.gauge.colors.high + '\",GradientType=1 )'\r\n                });\r\n            },\r\n            setMenu : function(options){\r\n                options = options || _data.options.menu;\r\n                options.on != undefined && (options.on = parseBoolean(options.on));\r\n                $.extend(true, _data.options, {menu: options});\r\n\r\n                _data.$menu && _data.$menu.off('click.menu.mapsvg');\r\n\r\n\r\n                if(_data.options.menu.on){\r\n                    var menuContainer = $('#'+_data.options.menu.containerId);\r\n\r\n                    if(menuContainer.length){\r\n\r\n                        if(!_data.$menu){\r\n                            if(!menuContainer.is('ul')){\r\n                                _data.$menu = $('<ul />').appendTo(menuContainer);\r\n                            }else{\r\n                                _data.$menu = menuContainer;\r\n                            }\r\n\r\n                            if(!_data.$menu.hasClass('mapsvg-menu'))\r\n                                _data.$menu.addClass('mapsvg-menu');\r\n                        }\r\n\r\n                        if(_data.$menu.children().length===0)\r\n                            // Add links into navigation container\r\n                            _data.regions.forEach(function (region, i) {\r\n                                if(!region.disabled)\r\n                                    _data.$menu.append(_data.options.menu.template(region));\r\n                            });\r\n\r\n                        _data.$menu.on('click.menu.mapsvg','a',function(e){\r\n                            e.preventDefault();\r\n                            var regionID = $(this).attr('href');\r\n                            var region = _this.getRegion(regionID);\r\n                            var center = region.getCenter();\r\n                            e = {clientX: center[0], clientY: center[1]};\r\n                            _this.regionClickHandler(e,region);\r\n                        }).on('mouseover.menu.mapsvg','a',function(e){\r\n                            var regionID = $(this).attr('href').replace('#','');\r\n                            var region = _this.getRegion(regionID);\r\n                            if (!region.selected)\r\n                                region.highlight();\r\n                        }).on('mouseout.menu.mapsvg','a',function(e){\r\n                            var regionID = $(this).attr('href');\r\n                            var region = _this.getRegion(regionID);\r\n                            if (!region.selected)\r\n                                region.unhighlight();\r\n                        });\r\n\r\n                    }\r\n                }\r\n            },\r\n            /*\r\n             *\r\n             * END SETTERS\r\n             *\r\n             * */\r\n            getRegion : function(id){\r\n                return _data.regions[_data.regionsDict[id]];\r\n            },\r\n            getMarker : function(id){\r\n                return _data.markers[_data.markersDict[id]];\r\n            },\r\n            checkId : function(id){\r\n                if(_this.getRegion(id))\r\n                    return {error: \"This ID is already used by a Region\"};\r\n                else if(_this.getMarker(id))\r\n                    return {error: \"This ID is already used by another Marker\"};\r\n                else\r\n                    return true;\r\n\r\n            },\r\n            regionsRedrawColors: function(){\r\n                _data.regions.forEach(function(region){\r\n                    region.setFill();\r\n                });\r\n            },\r\n            // destroy\r\n            destroy : function(){\r\n                delete instances[_data.$map.attr('id')];\r\n                _data.$map.empty();\r\n                return _this;\r\n            },\r\n            getData : function(){\r\n                return _data;\r\n            },\r\n            // GET SCALE VALUE\r\n            getScale: function(){\r\n\r\n                var ratio_def = _data.svgDefault.width / _data.svgDefault.height;\r\n                var ratio_new = _data.options.width / _data.options.height;\r\n                var scale1, scale2;\r\n\r\n                var size = [_data.$map.width(), _data.$map.height()];\r\n\r\n                scale2 = size[0] / _data.viewBox[2];\r\n\r\n                //\r\n                //if(ratio_new < ratio_def ){\r\n                //    // Calculate scale by height\r\n                //    //scale1 = _data.svgDefault.width / _data.svgDefault.viewBox[2];\r\n                //    scale2 = size[0] / _data.viewBox[2];\r\n                //}else{\r\n                //    // Calculate scale by width\r\n                //    //scale1 = _data.svgDefault.height / _data.svgDefault.viewBox[3];\r\n                //    scale2 = size[1] / _data.viewBox[3];\r\n                //}\r\n\r\n                //return (1 - (scale1-scale2));\r\n                //return (scale2/scale1);\r\n                return (scale2);\r\n            },\r\n            updateSize : function(){\r\n                _data.scale = _this.getScale();\r\n                _this.markersAdjustPosition();\r\n                if(_browser.ie){\r\n                    _this.mapAdjustStrokes();\r\n                }\r\n            },\r\n            // GET VIEBOX [x,y,width,height]\r\n            getViewBox : function(){\r\n                return _data.viewBox;\r\n            },\r\n            // SET VIEWBOX BY SIZE\r\n            viewBoxSetBySize : function(width,height){\r\n\r\n                _data._viewBox = _this.viewBoxGetBySize(width,height);\r\n                _data.options.width = parseFloat(width);\r\n                _data.options.height = parseFloat(height);\r\n\r\n                //var v = _this.viewBoxGetBySize(width,height);\r\n                //_data.viewBox  = $.extend([],_data._viewBox);\r\n                //_data.scale    = _this.getScale();\r\n                //_data.zoomLevel = 0;\r\n\r\n                _this.setViewBox(_data._viewBox, true);\r\n\r\n                //_data.$svgStretcher.attr('src',\r\n                //    \"data:image/svg+xml;charset=utf-8,<svg viewBox='0 0 \"+_data._viewBox[2]+\" \"+_data._viewBox[3]+\"' xmlns='http://www.w3.org/2000/svg'/>\"\r\n                //);\r\n                //\r\n\r\n                _data.whRatio = _data.viewBox[2] / _data.viewBox[3];\r\n                if(!_data.options.responsive)\r\n                    _this.setResponsive();\r\n                //_this.updateSize();\r\n\r\n                return _data.viewBox;\r\n            },\r\n            viewBoxGetBySize : function(width, height){\r\n\r\n\r\n                var new_ratio = width / height;\r\n                var old_ratio = _data.svgDefault.viewBox[2] / _data.svgDefault.viewBox[3];\r\n\r\n                var vb = $.extend([],_data.svgDefault.viewBox);\r\n\r\n                if (new_ratio != old_ratio){\r\n                    //vb[2] = width*_data.svgDefault.viewBox[2] / _data.svgDefault.width;\r\n                    //vb[3] = height*_data.svgDefault.viewBox[3] / _data.svgDefault.height;\r\n                    if (new_ratio > old_ratio){\r\n                        vb[2] = _data.svgDefault.viewBox[3] * new_ratio;\r\n                        vb[0] = _data.svgDefault.viewBox[0] - ((vb[2] - _data.svgDefault.viewBox[2])/2);\r\n                    }else{\r\n                        vb[3] = _data.svgDefault.viewBox[2] / new_ratio;\r\n                        vb[1] = _data.svgDefault.viewBox[1] - ((vb[3] - _data.svgDefault.viewBox[3])/2);\r\n                    }\r\n\r\n                }\r\n\r\n                return vb;\r\n            },\r\n            viewBoxReset : function(toInitial){\r\n                if(toInitial){\r\n                    var v = _data._viewBox || _data.svgDefault.viewBox;\r\n                    _data.zoomLevel = 0;\r\n                    _data._scale = 1;\r\n                    _this.setViewBox(v);\r\n                }else{\r\n                    _this.setViewBox();\r\n                }\r\n            },\r\n            getGeoViewBox : function(){\r\n                var v = _data.viewBox;\r\n                var leftLon = _this.convertPixelToGeo(v[0],v[1])[1];\r\n                var rightLon = _this.convertPixelToGeo(v[0]+v[2],v[1])[1];\r\n                var topLat = _this.convertPixelToGeo(v[0],v[1])[0];\r\n                var bottomLat = _this.convertPixelToGeo(v[0],v[1]+v[3])[0];\r\n                return [leftLon, topLat, rightLon, bottomLat];\r\n            },\r\n            mapAdjustStrokes : function(){\r\n                _data.regions.forEach(function(region){\r\n                    if(region.svg_style['stroke-width']){\r\n                        region.node.css('stroke-width', region.svg_style['stroke-width'] / _data.scale);\r\n                    }\r\n                });\r\n            },\r\n            // ZOOM\r\n            zoomIn: function(){\r\n                _this.zoom(1);\r\n            },\r\n            zoomOut: function(){\r\n                _this.zoom(-1);\r\n            },\r\n            touchZoomStart : function (touchScale){\r\n\r\n                touchZoomStart = _data._scale;\r\n                _data.scale  = _data.scale * zoom_k;\r\n                zoom   = _data._scale;\r\n                _data._scale = _data._scale * zoom_k;\r\n\r\n\r\n                var vWidth     = _data.viewBox[2];\r\n                var vHeight    = _data.viewBox[3];\r\n                var newViewBox = [];\r\n\r\n                newViewBox[2]  = _data._viewBox[2] / _data._scale;\r\n                newViewBox[3]  = _data._viewBox[3] / _data._scale;\r\n\r\n                newViewBox[0]  = _data.viewBox[0] + (vWidth - newViewBox[2]) / 2;\r\n                newViewBox[1]  = viewBox[1] + (vHeight - newViewBox[3]) / 2;\r\n\r\n                _this.setViewBox(newViewBox);\r\n\r\n            },\r\n            touchZoomMove : function(){\r\n\r\n            },\r\n            touchZoomEnd : function(){\r\n\r\n            },\r\n            zoom : function (delta, exact){\r\n\r\n                var vWidth     = _data.viewBox[2];\r\n                var vHeight    = _data.viewBox[3];\r\n                var newViewBox = [];\r\n\r\n                if(!exact){\r\n                    // check for zoom limit\r\n                    var d = delta > 0 ? 1 : -1;\r\n                    _data._zoomLevel = _data.zoomLevel;\r\n                    _data._zoomLevel += d;\r\n                    if(_data._zoomLevel > _data.options.zoom.limit[1] || _data._zoomLevel < _data.options.zoom.limit[0]) return false;\r\n\r\n                    _data.zoomLevel = _data._zoomLevel;\r\n\r\n                    var zoom_k = d * _data.options.zoom.delta;\r\n                    if (zoom_k < 1) zoom_k = -1/zoom_k;\r\n\r\n                    _data._scale         = _data._scale * zoom_k;\r\n                    newViewBox[2]  = _data._viewBox[2] / _data._scale;\r\n                    newViewBox[3]  = _data._viewBox[3] / _data._scale;\r\n                }else{\r\n                    _data._scale         = exact;\r\n                    newViewBox[2]  = _data.touchZoomStartViewBox[2] / _data._scale;\r\n                    newViewBox[3]  = _data.touchZoomStartViewBox[3] / _data._scale;\r\n                }\r\n\r\n                newViewBox[0]  = _data.viewBox[0] + (vWidth - newViewBox[2]) / 2;\r\n                newViewBox[1]  = _data.viewBox[1] + (vHeight - newViewBox[3]) / 2;\r\n\r\n                _this.setViewBox(newViewBox);\r\n\r\n            },\r\n            // MARK : DELETE\r\n            markerDelete: function(marker){\r\n                var id = marker.id;\r\n                var test = _data.markers.splice(_data.markersDict[id],1);\r\n                //_data.options.markers.splice(_data.markersDict[id],1);\r\n                marker.delete();\r\n                marker = null;\r\n                _this.updateMarkersDict();\r\n                if (_data.markers.length == 0)\r\n                    _data.options.markerLastID = 0;\r\n            },\r\n            // MARK : ADD\r\n            markerAdd : function(opts, create) {\r\n                // Join default marker options with user-defined options\r\n                var options = $.extend(true, {}, markerOptions, opts);\r\n\r\n                if(!options.src)\r\n                    return false;\r\n\r\n                options.src = safeURL(options.src);\r\n\r\n                if (options.width && options.height){\r\n                    return _this.markerAddFinalStep(options, create);\r\n                }else{\r\n                    var img = new Image();\r\n                    img.onload = function(){\r\n                        options.width = this.width;\r\n                        options.height = this.height;\r\n                        return _this.markerAddFinalStep(options, create);\r\n                    };\r\n                    img.src = options.src;\r\n                }\r\n            },\r\n            markerAddFinalStep : function(options, create){\r\n\r\n\r\n                if (options.xy || (isNumber(options.x) && isNumber(options.y))){\r\n                    xy = options.xy || [options.x, options.y];\r\n                    if(create){\r\n                        xy[0] += _data.scale < 1 ? 1 : 2; // not sure what's happening here but works good\r\n                        xy[1] += 1;\r\n\r\n                        //xy[0] = xy[0]/_data.scale - options.width/(2*_data.scale) + _data.viewBox[0];\r\n                        //xy[1] = (xy[1]-options.height)/_data.scale + _data.viewBox[1];\r\n                        //\r\n                        //markerX       = markerX + markerWidth/(2*mapScale) - markerWidth/2;\r\n                        //markerY       = markerY + markerHeight/mapScale - markerHeight;\r\n\r\n                        xy[0] = xy[0]/_data.scale - options.width/2 + _data.viewBox[0];\r\n                        xy[1] = xy[1]/_data.scale - options.height + _data.viewBox[1];\r\n\r\n\r\n                        //xy = Marker.getDefaultCoords(xy[0],xy[1], options.width, options.height, this.getScale());\r\n\r\n\r\n                    }\r\n                }else if(options.geoCoords) {\r\n                    xy = _this.convertGeoToPixel(options.geoCoords);\r\n                    xy[0] = xy[0] - options.width / 2 + .3;\r\n                    xy[1] = (xy[1] - options.height) + 1.5;\r\n                }else{\r\n                    return false;\r\n                }\r\n\r\n                options.x = xy[0];\r\n                options.y = xy[1];\r\n                options.id  = options.id || 'marker_'+(_data.options.markerLastID++);\r\n                if(!options.geoCoords && _data.mapIsGeo){\r\n                    options.geoCoords = _this.convertPixelToGeo(options.x + options.width/2, options.y + (options.height-1));\r\n                }\r\n\r\n                var marker = new Marker(options, _data.scale);\r\n\r\n                _data.$svg.append(marker.node);\r\n                marker.href && marker.setHref(marker.href);\r\n                // Create a group\r\n                // var group = marker.data('group') || 'root';\r\n//                if(!_data.markerGroups[group])\r\n//                    _data.markerGroups[group] = [];                \r\n//                _data.markerGroups[group].push(marker);\r\n\r\n                marker.adjustPosition(_data.scale);\r\n                _data.markers.push(marker);\r\n                _data.markersDict[marker.id] = _data.markers.length - 1;\r\n\r\n                // Call edit window\r\n                if(create && _data.markerEditHandler)\r\n                    _data.markerEditHandler.call(marker);\r\n\r\n                return marker;\r\n            },\r\n            markersAdjustPosition : function(){\r\n                // We want a marker \"tip\" to be on bottom side (like a pin)\r\n                // But Raphael starts to draw an image from left top corner.\r\n                // At the same time we don't want a marker to be scaled in size when map scales;\r\n                // Mark always should stay the same size.\r\n                // In this case coordinates of bottom point of image will vary with map scaling.\r\n                // So we have to calculate the offset.\r\n                var dx, dy;\r\n                _data.markers.forEach(function(marker){\r\n                    marker.adjustPosition(_data.scale);\r\n                });\r\n            },\r\n            // MARK MOVE & EDIT HANDLERS\r\n            markerMoveStart : function(){\r\n                // storing original coordinates\r\n                this.data('ox', parseFloat(this.attr('x')));\r\n                this.data('oy', parseFloat(this.attr('y')));\r\n            },\r\n            markerMove : function (dx, dy) {\r\n                dx = dx/_data.scale;\r\n                dy = dy/_data.scale;\r\n                this.attr({x: this.data('ox') + dx, y: this.data('oy') + dy});\r\n            },\r\n            markerMoveEnd : function () {\r\n                // if coordinates are same then it was a \"click\" and we should start editing\r\n                if(this.data('ox') == this.attr('x') && this.data('oy') == this.attr('y')){\r\n                    options.markerEditHandler.call(this);\r\n                }\r\n            },\r\n            scrollStart : function (e,mapsvg){\r\n\r\n                if($(e.target).hasClass('mapsvg-btn-zoom') || $(e.target).closest('.mapsvg-gauge').length)\r\n                    return false;\r\n\r\n                if(_data.editMarkers.on && $(e.target).attr('class')=='mapsvg-marker')\r\n                    return false;\r\n                //mapsvg.getData().$map.css('pointer-events','none');\r\n\r\n\r\n                e.preventDefault();\r\n                var ce = e.touches && e.touches[0] ? e.touches[0] : e;\r\n\r\n                _data.scroll = {};\r\n\r\n                // initial viewbox when scrollning started\r\n                _data.scroll.vxi = _data.viewBox[0];\r\n                _data.scroll.vyi = _data.viewBox[1];\r\n                // mouse coordinates when scrollning started\r\n                _data.scroll.x  = ce.clientX;\r\n                _data.scroll.y  = ce.clientY;\r\n                // mouse delta\r\n                _data.scroll.dx = 0;\r\n                _data.scroll.dy = 0;\r\n                // new viewbox x/y\r\n                _data.scroll.vx = 0;\r\n                _data.scroll.vy = 0;\r\n\r\n\r\n                $('body').on('mousemove.scroll.mapsvg', _this.scrollMove).on('mouseup.scroll.mapsvg', function(e){_this.scrollEnd(e,mapsvg);});\r\n            },\r\n            scrollMove :  function (e){\r\n\r\n                e.preventDefault();\r\n\r\n                _data.isScrolling = true;\r\n\r\n                $('body').css({'cursor': 'move'});\r\n\r\n                var ce = e.touches && e.touches[0] ? e.touches[0] : e;\r\n\r\n                // delta x/y\r\n                _data.scroll.dx = (_data.scroll.x - ce.clientX);\r\n                _data.scroll.dy = (_data.scroll.y - ce.clientY);\r\n\r\n                // new viewBox x/y\r\n                var vx = parseInt(_data.scroll.vxi + _data.scroll.dx /_data.scale);\r\n                var vy = parseInt(_data.scroll.vyi + _data.scroll.dy /_data.scale);\r\n\r\n                // Limit scroll to map's boundaries\r\n                if(_data.options.scroll.limit){\r\n                    if(vx < _data.svgDefault.viewBox[0])\r\n                        vx = _data.svgDefault.viewBox[0];\r\n                    else if(_data.viewBox[2] + vx > _data.svgDefault.viewBox[2])\r\n                        vx = _data.svgDefault.viewBox[2]-_data.viewBox[2];\r\n\r\n                    if(vy < _data.svgDefault.viewBox[1])\r\n                        vy = _data.svgDefault.viewBox[1];\r\n                    else if(_data.viewBox[3] + vy > _data.svgDefault.viewBox[3])\r\n                        vy = _data.svgDefault.viewBox[3]-_data.viewBox[3];\r\n                }\r\n\r\n                _data.scroll.vx = vx;\r\n                _data.scroll.vy = vy;\r\n\r\n\r\n                // set new viewBox\r\n                _this.setViewBox([_data.scroll.vx,  _data.scroll.vy, _data.viewBox[2], _data.viewBox[3]]);\r\n                //_data.$map.css({'-webkit-transform' : 'translate('+vx+'px,'+vy+'px'});\r\n\r\n            },\r\n            scrollEnd : function (e,mapsvg){\r\n\r\n                _data.isScrolling = false;\r\n\r\n                // call regionClickHandler if mouse did not move more than 5 pixels\r\n                if (Math.abs(_data.scroll.dx)<5 && Math.abs(_data.scroll.dy)<5){\r\n                    if(_data.editMarkers.on)\r\n                        _this.markerAddClickHandler(e);\r\n                    else if (_data.region_clicked)\r\n                        _this.regionClickHandler(e, _data.region_clicked);\r\n                }\r\n\r\n                $('body').css({'cursor': 'default'});\r\n\r\n                _data.viewBox[0] = _data.scroll.vx || _data.viewBox[0];\r\n                _data.viewBox[1] = _data.scroll.vy || _data.viewBox[1] ;\r\n\r\n                mapsvg.getData().$map.css('pointer-events','auto');\r\n\r\n                $('body').off('.scroll.mapsvg');\r\n            },\r\n            // REMEMBER WHICH REGION WAS CLICKED BEFORE START PANNING\r\n            scrollRegionClickHandler : function (e, region) {\r\n                _data.region_clicked = region;\r\n            },\r\n            touchStart : function (e,mapsvg){\r\n                e.preventDefault();\r\n                if(_data.options.zoom && e.touches && e.touches.length == 2){\r\n                    _data.touchZoomStartViewBox = _data.viewBox;\r\n                    _data.touchZoomStart =  _data.scale;\r\n                    _data.touchZoomEnd   =  1;\r\n                }else{\r\n                    _this.scrollStart(e,mapsvg);\r\n                    _data.isScrolling = true;\r\n                }\r\n            },\r\n            touchMove : function (e){\r\n                e.preventDefault();\r\n                if(_data.options.zoom && e.touches && e.touches.length >= 2){\r\n                    _this.zoom(null, e.scale);\r\n                    _data.isScrolling = false;\r\n                }else if(_data.isScrolling){\r\n                    _this.scrollMove(e);\r\n                }\r\n            },\r\n            touchEnd : function (e){\r\n                e.preventDefault();\r\n                if(_data.touchZoomStart){\r\n                    _data.touchZoomStart  = false;\r\n                    _data.touchZoomEnd    = false;\r\n                }else if(_data.isScrolling){\r\n                    _this.scrollEnd(e);\r\n                }\r\n            },\r\n            markersGroupHide : function(group){\r\n                for(var i in _data.markers[group]){\r\n                    _data.markers[group][i].hide();\r\n                }\r\n            },\r\n            markersGroupShow : function(group){\r\n                for(var i in _data.markers[group]){\r\n                    _data.markers[group][i].show();\r\n                }\r\n            },\r\n            regionsGroupSelect : function(group){\r\n                for(var i in _data.markers[group]){\r\n                    _data.markers[group][i].hide();\r\n                }\r\n            },\r\n            regionsGroupUnselect : function(group){\r\n                for(var i in _data.markers[group]){\r\n                    _data.markers[group][i].show();\r\n                }\r\n            },\r\n            // GET ALL MARKERS\r\n            markersGet : function(){\r\n                return _data.markers;\r\n            },\r\n            // GET SELECTED REGION OR ARRAY OF SELECTED REGIONS\r\n            getSelected : function(){\r\n                return _data.selected_id;\r\n            },\r\n            // SELECT REGION\r\n            selectRegion :    function(id){\r\n                var region = _this.getRegion(id);\r\n                if(!region || region.disabled) return false;\r\n                if(_data.options.multiSelect && !_data.editRegions.on){\r\n                    if(region.selected){\r\n                        _this.deselectRegion(region);\r\n                        return;\r\n                    }\r\n                }else if(_data.selected_id.length>0){\r\n                    _this.deselectRegion();\r\n                }\r\n                _data.selected_id.push(id);\r\n                region.select();\r\n            },\r\n            deselectAllRegions : function(){\r\n                $.each(_data.selected_id, function(index,id){\r\n                    _this.deselectRegion(_this.getRegion(id));\r\n                });\r\n            },\r\n            deselectRegion : function (region){\r\n                if(!region)\r\n                    region = _this.getRegion(_data.selected_id[0]);\r\n                region.deselect();\r\n                var i = $.inArray(region.id, _data.selected_id);\r\n                _data.selected_id.splice(i,1);\r\n                if(_browser.ie)//|| _browser.firefox)\r\n                    _this.mapAdjustStrokes();\r\n            },\r\n            selectRegionsGroup : function(group_id){\r\n                for(var r in _data.regionGroups[group_id]){\r\n                    var region_id = _data.regionGroups[group_id][r].id;\r\n                    _this.selectRegion(region_id);\r\n                }\r\n            },\r\n            highlightRegionsGroup : function(group_id){\r\n                for(var r in _data.regionGroups[group_id]){\r\n                    var region_id = _data.regionGroups[group_id][r].id;\r\n                    _this.highlightRegion(region_id);\r\n                }\r\n            },\r\n            unhighlightRegionsGroup : function(group_id){\r\n                for(var r in _data.regionGroups[group_id]){\r\n                    var region_id = _data.regionGroups[group_id][r].id;\r\n                    _this.unhighlightRegion(region_id);\r\n                }\r\n            },\r\n            narrowToRegionsGroup : function(group_id){\r\n                _data.regions.forEach(function(r){\r\n                    if(r.group!=group_id && !r.disabled){\r\n                        r.disabled = true;\r\n                        r.disabledTemp = true;\r\n                        $(r.node).addClass('mapsvg-disabled');\r\n                    }else{\r\n                        if(r.disabledTemp){\r\n                            r.disabledTemp = false;\r\n                            r.disabled = false;\r\n                            $(r.node).removeClass('mapsvg-disabled');\r\n                        }\r\n                    }\r\n                });\r\n            },\r\n            disableRegionsGroup : function(group_id){\r\n\r\n            },\r\n            enableAllRegionsGroups : function(){\r\n                _data.regions.forEach(function(r){\r\n                    if(r.disabledTemp){\r\n                        r.disabledTemp = false;\r\n                        r.disabled = false;\r\n                        $(r.node).removeClass('mapsvg-disabled');\r\n                    }\r\n                });\r\n            },\r\n            convertGeoToPixel: function (coords){\r\n\r\n                var lat = parseFloat(coords[0]);\r\n                var lon = parseFloat(coords[1]);\r\n                var x = (lon - _data.geoViewBox.leftLon) * (_data.svgDefault.width / _data.mapLonDelta);\r\n\r\n                var lat = lat * 3.14159 / 180;\r\n                var worldMapWidth = ((_data.svgDefault.width / _data.mapLonDelta) * 360) / (2 * 3.14159);\r\n                var mapOffsetY = (worldMapWidth / 2 * Math.log((1 + Math.sin(_data.mapLatBottomDegree)) / (1 - Math.sin(_data.mapLatBottomDegree))));\r\n                var y = _data.svgDefault.height - ((worldMapWidth / 2 * Math.log((1 + Math.sin(lat)) / (1 - Math.sin(lat)))) - mapOffsetY);\r\n\r\n                x += _data.svgDefault.viewBox[0];\r\n                y += _data.svgDefault.viewBox[1];\r\n\r\n                return [x, y];\r\n            },\r\n            convertPixelToGeo: function (tx, ty){\r\n                tx -= _data.svgDefault.viewBox[0];\r\n                ty -= _data.svgDefault.viewBox[1];\r\n                /* called worldMapWidth in Raphael's Code, but I think that's the radius since it's the map width or circumference divided by 2*PI  */\r\n                var worldMapRadius = _data.svgDefault.width / _data.mapLonDelta * 360/(2 * Math.PI);\r\n                var mapOffsetY = ( worldMapRadius / 2 * Math.log( (1 + Math.sin(_data.mapLatBottomDegree) ) / (1 - Math.sin(_data.mapLatBottomDegree))  ));\r\n                var equatorY = _data.svgDefault.height + mapOffsetY;\r\n                var a = (equatorY-ty)/worldMapRadius;\r\n                var lat = 180/Math.PI * (2 * Math.atan(Math.exp(a)) - Math.PI/2);\r\n                var long = _data.geoViewBox.leftLon+tx/_data.svgDefault.width*_data.mapLonDelta;\r\n\r\n                return [lat,long];\r\n            },\r\n            // PICK COLOR FROM GRADIENT\r\n            pickGaugeColor: function(gaugeValue) {\r\n                var w = (gaugeValue - _data.options.gauge.min) / _data.options.gauge.maxAdjusted;\r\n                var rgb = [\r\n                    Math.round(_data.options.gauge.colors.diffRGB.r * w + _data.options.gauge.colors.lowRGB.r),\r\n                    Math.round(_data.options.gauge.colors.diffRGB.g * w + _data.options.gauge.colors.lowRGB.g),\r\n                    Math.round(_data.options.gauge.colors.diffRGB.b * w + _data.options.gauge.colors.lowRGB.b),\r\n                    Math.round(_data.options.gauge.colors.diffRGB.a * w + _data.options.gauge.colors.lowRGB.a)\r\n                ];\r\n                return rgb;\r\n            },\r\n            // CHECK IF REGION IS DISABLED\r\n            isRegionDisabled : function (id, svgfill){\r\n\r\n                if(_data.options.regions[id] && (_data.options.regions[id].disabled || svgfill == 'none') ){\r\n                    return true;\r\n                }else if(\r\n                    (_data.options.regions[id] == undefined || parseBoolean(_data.options.regions[id].disabled)) &&\r\n                    (_data.options.disableAll || svgfill == 'none' || id == 'labels' || id == 'Labels')\r\n\r\n                ){\r\n                    return true;\r\n                }else{\r\n                    return false;\r\n                }\r\n            },\r\n            regionClickHandler : function(e, region){\r\n\r\n                if(!region || region.disabled) return false;\r\n\r\n                _data.region_clicked = null;\r\n\r\n                if(region.mapsvg_type=='region')\r\n                    _this.selectRegion(region.id);\r\n                if(_data.editRegions.on){\r\n                    _data.regionEditHandler.call(region);\r\n                    return;\r\n                }\r\n                _this.hidePopover();\r\n                var popover = _this.getPopoverBody(region);\r\n                popover && _this.showPopover(e, popover);\r\n\r\n                if(_data.options.onClick)\r\n                    return _data.options.onClick.call(region, e, _this);\r\n\r\n                if(touchDevice && region.href && !_data.disableLinks)\r\n                    window.location.href = region.href;\r\n\r\n            },\r\n            fileExists : function(url){\r\n                if(url.substr(0,4)==\"data\")\r\n                    return true;\r\n                var http = new XMLHttpRequest();\r\n                http.open('HEAD', url, false);\r\n                http.send();\r\n                return http.status!=404;\r\n            },\r\n            getStyle : function(elem,prop){\r\n                if (elem.currentStyle) {\r\n                    var res= elem.currentStyle.margin;\r\n                } else if (window.getComputedStyle) {\r\n                    if (window.getComputedStyle.getPropertyValue){\r\n                        var res= window.getComputedStyle(elem, null).getPropertyValue(prop)}\r\n                    else{var res =window.getComputedStyle(elem)[prop] };\r\n                }\r\n                return res;\r\n            },\r\n            search: function(str){\r\n                results = [];\r\n                str = str.toLowerCase();\r\n                _data.regions.forEach(function(r){\r\n                    if(r.id.toLowerCase().indexOf(str) === 0 || (r.title && r.title.toLowerCase().indexOf(str) === 0))\r\n                        results.push(r.id);\r\n                });\r\n                return results;\r\n            },\r\n            searchMarkers: function(str){\r\n                results = [];\r\n                str = str.toLowerCase();\r\n                _data.markers.forEach(function(m){\r\n                    if(m.id.toLowerCase().indexOf(str) === 0)\r\n                        results.push(m.id);\r\n                });\r\n                return results;\r\n            },\r\n            markerAddClickHandler : function(e){\r\n                // Don't add marker if marker was clicked\r\n                if($(e.target).is('image')) return false;\r\n                var mc = mouseCoords(e);\r\n                var x = mc.x - _data.$map.offset().left;\r\n                var y = mc.y - _data.$map.offset().top;\r\n\r\n                if(!$.isNumeric(x) || !$.isNumeric(y))\r\n                    return false;\r\n\r\n                _this.markerAdd({xy: [x, y], group: _data.editMarkers.group}, true);\r\n            },\r\n            setMarkersEditMode : function(on){\r\n                _data.editMarkers.on = parseBoolean(on);\r\n                _this.deselectAllRegions();\r\n                _this.setEventHandlers();\r\n            },\r\n            setRegionsEditMode : function(on){\r\n                _data.editRegions.on = parseBoolean(on);\r\n                _this.deselectAllRegions();\r\n                _this.setEventHandlers();\r\n            },\r\n            // Adding markers\r\n            setMarkers : function (markers){\r\n                $.each(markers, function(i, marker){\r\n                    _this.markerAdd(marker);\r\n                });\r\n            },\r\n            setEventHandler : function(){\r\n\r\n            },\r\n            runUserFunction : function(func){\r\n                try{\r\n                    func();\r\n                }catch(error){\r\n                    console.log(\"MapSVG user-defined function error: (line \"+error.line+\"): \"+error.message);\r\n                }\r\n            },\r\n            showTooltip : function(region){\r\n                if(region.disabled)\r\n                    return false;\r\n\r\n                var tip;\r\n                if (_data.options.tooltips.priority == \"global\"){\r\n                    tip =\r\n                        (typeof _data.options.tooltips.mode == \"function\") && _data.options.tooltips.mode.call(region,_data.mapTip, region, _this)\r\n                        ||\r\n                        _data.options.tooltips.mode!='off' && region[_data.options.tooltips.mode]\r\n                        ||\r\n                        region.tooltip\r\n                }else{\r\n                    tip =\r\n                        region.tooltip\r\n                        ||\r\n                        (typeof _data.options.tooltips.mode == \"function\") && _data.options.tooltips.mode.call(region,_data.mapTip, region, _this)\r\n                        ||\r\n                        _data.options.tooltips.mode!='off' && region[_data.options.tooltips.mode];\r\n                }\r\n                if (tip){\r\n                    _data.mapTip.html(tip);\r\n                    _data.mapTip.addClass('mapsvg-tooltip-visible');\r\n                }\r\n            },\r\n            getPopoverBody: function(region){\r\n                var popover;\r\n                if(_data.options.popovers.priority == 'global'){\r\n                    popover = typeof _data.options.popovers.mode == 'function' ? _data.options.popovers.mode.call(region, _data.mapPopover, region, _this) : region.popover;\r\n                }else{\r\n                    popover = region.popover || (typeof _data.options.popovers.mode == 'function' ? _data.options.popovers.mode.call(region, _data.mapPopover, region, _this) : null);\r\n                }\r\n\r\n                return popover;\r\n            },\r\n            showPopover : function (e, content, pos){\r\n\r\n                if (!pos || pos.length != 2){\r\n                    var m   = mouseCoords(e);\r\n                    var pos = [m.x, m.y];\r\n                }else{\r\n                    var scale = _this.getScale();\r\n                    pos[0] = _data.$map.offset().left  + pos[0]*scale;\r\n                    pos[1] = _data.$map.offset().top + pos[1]*scale;\r\n                }\r\n\r\n                if(content){\r\n                    _data.mapPopover.contentDiv.html(content);\r\n                    var nx = pos[0] - _data.mapPopover.outerWidth(false)/2;\r\n                    var ny = pos[1] - _data.mapPopover.outerHeight(false) - 14;\r\n                    if(nx<0) nx = 0;\r\n                    if(ny<0) ny = 0;\r\n\r\n                    //if(nx+_data.mapPopover.outerWidth(false) > $(window).scrollLeft() + $(window).width()) nx = ($(window).scrollLeft() + $(window).width()) - _data.mapPopover.outerWidth(false);\r\n                    //if(ny+_data.mapPopover.outerHeight(false) > $(window).scrollTop() + $(window).height()) ny = ($(window).scrollTop() + $(window).height()) - _data.mapPopover.outerHeight(false);\r\n                    //if(nx < $(window).scrollLeft()) nx = $(window).scrollLeft();\r\n                    //if(ny < $(window).scrollTop()) ny = $(window).scrollTop();\r\n\r\n                    _data.mapPopover.css('left', nx).css('top', ny);\r\n                    //_data.mapPopover.show();\r\n                    _data.mapPopover.addClass('mapsvg-popover-visible');\r\n                }else{\r\n                    _data.mapPopover.removeClass('mapsvg-popover-visible');\r\n                }\r\n            },\r\n            hidePopover : function(){\r\n                _data.mapPopover.contentDiv.empty();\r\n                //_data.mapPopover.hide(0,function(){\r\n                //    $('body').off('mousedown.popover.mapsvg', _this.popoverOffHandler);\r\n                //    if(_data.options.onPopoverClose)\r\n                //        _data.options.onPopoverClose.call(_this);\r\n                //});\r\n                _data.mapPopover.removeClass('mapsvg-popover-visible');\r\n                $('body').off('mousedown.popover.mapsvg', _this.popoverOffHandler);\r\n                if(_data.options.onPopoverClose)\r\n                    _data.options.onPopoverClose.call(_this);\r\n            },            // Hide tooltip\r\n            hideTip : function (){\r\n                _data.mapTip.removeClass('mapsvg-tooltip-visible');\r\n                //_data.mapTip.html('');\r\n            },\r\n            popoverOffHandler : function(e){\r\n\r\n                // If clicked object was popover by itself, stop.\r\n                if($(e.target).closest('.mapsvg-popover').length)\r\n                    return false;\r\n\r\n                _this.hidePopover();\r\n            },\r\n            mouseOverHandler : function(e){\r\n                //if (this.disabled)\r\n                //    return false;\r\n                if(this instanceof Region) {\r\n                    if (!this.selected)\r\n                        this.highlight();\r\n                }\r\n                _this.showTooltip(this);\r\n                //// TODO как-то убрать\r\n                //if(!_data.editRegions.on && !_data.editMarkers.on)\r\n                return _data.options.mouseOver && _data.options.mouseOver.call(this, e, _this);\r\n            },\r\n            mouseOutHandler : function(e){\r\n                //if (this.disabled)\r\n                //    return false;\r\n                if(this instanceof Region) {\r\n                    if (!this.selected)\r\n                        this.unhighlight();\r\n                }\r\n                _this.hideTip();\r\n                //// todo remove\r\n                //if(!_data.editRegions.on && !_data.editMarkers.on)\r\n                return _data.options.mouseOut && _data.options.mouseOut.call(this, e, _this);\r\n            },\r\n            updateOptions : function(options){\r\n                $.extend(true,_data.options,options);\r\n            },\r\n            updateMarkersDict : function(){\r\n                _data.markersDict = {};\r\n                _data.markers.forEach(function(marker, i){\r\n                    _data.markersDict[marker.id] = i;\r\n                });\r\n            },\r\n            setEventHandlers : function(){\r\n\r\n                _data.$map.off('.common.mapsvg');\r\n\r\n                if(_data.editMarkers.on){\r\n\r\n                    var event2 = touchDevice ? 'touchstart.common.mapsvg' : 'mousedown.common.mapsvg';\r\n                    _data.$map.on(event2, '.mapsvg-marker',function(e){\r\n                        e.originalEvent.preventDefault();\r\n                        var marker = _this.getMarker($(this).attr('id'));\r\n                        var startCoords = mouseCoords(e);\r\n                        marker.drag(startCoords, _data.scale, function() {\r\n                            if (_data.mapIsGeo){\r\n                                // TODO fix y-shift\r\n                                this.geoCoords = _this.convertPixelToGeo(this.x + this.width / 2, this.y + (this.height-1));\r\n                            }\r\n\r\n                            _data.markerEditHandler.call(this,true);\r\n                        },function(){\r\n                            _data.markerEditHandler.call(this);\r\n                        });\r\n                    });\r\n                }\r\n\r\n                // REGIONS\r\n                if (!touchDevice) {\r\n                    if(!_data.editMarkers.on) {\r\n                        _data.$map.on('mouseover.common.mapsvg', '.mapsvg-region', function (e) {\r\n                            var id = $(this).attr('id');\r\n                            _this.mouseOverHandler.call(_this.getRegion(id), e, _this, options);\r\n                        }).on('mouseleave.common.mapsvg', '.mapsvg-region', function (e) {\r\n                            var id = $(this).attr('id');\r\n                            _this.mouseOutHandler.call(_this.getRegion(id), e, _this, options);\r\n                        });\r\n                    }\r\n                    if(!_data.editRegions.on){\r\n                        _data.$map.on('mouseover.common.mapsvg', '.mapsvg-marker', function (e) {\r\n                            var id = $(this).attr('id');\r\n                            _this.mouseOverHandler.call(_this.getMarker(id), e, _this, options);\r\n                        }).on('mouseleave.common.mapsvg', '.mapsvg-marker', function (e) {\r\n                            var id = $(this).attr('id');\r\n                            _this.mouseOutHandler.call(_this.getMarker(id), e, _this, options);\r\n                        });\r\n                    }\r\n                }\r\n\r\n                if (!_data.options.scroll.on) {\r\n                    var event = touchDevice ? 'touchstart.common.mapsvg' : 'click.common.mapsvg';\r\n                    if(!_data.editMarkers.on) {\r\n                        _data.$map.on(event, '.mapsvg-region', function (e) {\r\n                            _this.regionClickHandler.call(_this, e, _this.getRegion($(this).attr('id')));\r\n                        });\r\n                        _data.$map.on(event, '.mapsvg-marker', function (e) {\r\n                            _this.regionClickHandler.call(_this, e, _this.getMarker($(this).attr('id')));\r\n                        });\r\n                    }else{\r\n                        _data.$map.on(event, function (e) {\r\n                            _this.markerAddClickHandler(e);\r\n                        });\r\n                    }\r\n                } else {\r\n                    var event = touchDevice ? 'touchstart.common.mapsvg' : 'mousedown.common.mapsvg';\r\n                    _data.$map.on(event, '.mapsvg-region', function (e) {\r\n                            e.preventDefault();\r\n                            var obj = _this.getRegion($(this).attr('id'));\r\n                            _this.scrollRegionClickHandler.call(_this, e, obj);\r\n                        }\r\n                    );\r\n                    _data.$map.on(event, '.mapsvg-marker', function (e) {\r\n                            e.preventDefault();\r\n                            var obj = _this.getMarker($(this).attr('id'));\r\n                            _this.scrollRegionClickHandler.call(_this, e, obj);\r\n                        }\r\n                    );\r\n                    if (!touchDevice) {\r\n                        _data.$map.on('mousedown.common.mapsvg', function(e){_this.scrollStart(e,_this);});\r\n                    } else {\r\n                        _data.$map.on('touchstart.common.mapsvg', function(e){_this.touchStart(e,_this);})\r\n                            .on('touchmove.common.mapsvg', _this.touchMove)\r\n                            .on('touchend.common.mapsvg', _this.touchEnd);\r\n                    }\r\n                }\r\n            },\r\n            // INIT\r\n            init: function(opts, elem) {\r\n\r\n                if(!opts.source) {\r\n                    alert('mapSVG Error: Please provide a map URL');\r\n                    return false;\r\n                }\r\n\r\n\r\n                if(opts.beforeLoad)\r\n                    try{opts.beforeLoad.call(_this);}catch(err){}\r\n\r\n\r\n                // Cut protocol (http: || https:) - to avoid \"cross-domain\" error\r\n                if(opts.source.indexOf('http://') == 0 || opts.source.indexOf('https://') == 0)\r\n                    opts.source = \"//\"+opts.source.split(\"://\").pop();\r\n\r\n                ////// TODO и это работает? а если значения в опциях не установлены?\r\n                ////opts.scroll  = parseBoolean(opts.scroll);\r\n                ////opts.zoom = parseBoolean(opts.zoom);\r\n                //opts.responsive  = opts.responsive!=null ?parseBoolean(opts.responsive);\r\n                //opts.disableAll  = parseBoolean(opts.disableAll);\r\n                //opts.multiSelect = parseBoolean(opts.multiSelect);\r\n\r\n                // If veiwBox is set as string region's name (or country name)\r\n                // then we'll calculate veiwBox parameters later\r\n                //if(opts.viewBox && typeof opts.viewBox == 'string'){\r\n                //    opts.viewBoxFind = opts.viewBox;\r\n                //    delete opts.viewBox;\r\n                //}\r\n\r\n                /** Setting _data **/\r\n                _data  = {};\r\n                _data.options = $.extend(true, {}, defaults, opts);\r\n                _data.editRegions = {on:false};\r\n                _data.editMarkers = {on:false};\r\n                _data.map  = elem;\r\n                _data.$map = $(elem);\r\n                _data.whRatio = 0;\r\n                _data.isScrolling = false;\r\n                _data.markerOptions = {};\r\n                _data.svgDefault = {};\r\n                _data.refLength = 0;\r\n                _data.scale  = 1;         // absolute scale\r\n                _data._scale = 1;         // relative scale starting from current zoom level\r\n                _data.selected_id    = [];\r\n                _data.mapData        = {};\r\n                _data.regions        = [];\r\n                _data.regionsDict    = {};\r\n                _data.markers        = [];\r\n                _data.markersDict    = {};\r\n                _data._viewBox       = []; // initial viewBox\r\n                _data.viewBox        = []; // current viewBox\r\n                _data.viewBoxZoom    = [];\r\n                _data.viewBoxFind    = undefined;\r\n                _data.zoomLevel      = 0;\r\n                _data.scroll         = {};\r\n                _data.geoCoordinates = false,\r\n                    _data.geoViewBox     = {leftLon:0, topLat:0, rightLon:0, bottomLat:0},\r\n\r\n\r\n                    // Set background\r\n                    _data.$map.addClass('mapsvg').css('background',_data.options.colors.background);\r\n\r\n                var loading = $('<div>'+_data.options.loadingText+'</div>').addClass('mapsvg-loading');\r\n                _data.$map.append(loading);\r\n                loading.css({\r\n                    'margin-left': function () {\r\n                        return -($(this).outerWidth(false) / 2)+'px';\r\n                    },\r\n                    'margin-top': function () {\r\n                        return -($(this).outerHeight(false) / 2)+'px';\r\n                    }\r\n                });\r\n\r\n                // GET the map by ajax request\r\n                $.ajax({\r\n                    url: _data.options.source,\r\n                    success:  function(xmlData){\r\n\r\n                        $data = $(xmlData);\r\n\r\n                        // Default width/height/viewBox from SVG\r\n                        var svgTag               = $data.find('svg');\r\n                        _data.$svg               = svgTag;\r\n                        _data.svgDefault.width   = parseFloat(svgTag.attr('width').replace(/px/g,''));\r\n                        _data.svgDefault.height  = parseFloat(svgTag.attr('height').replace(/px/g,''));\r\n                        _data.svgDefault.viewBox = svgTag.attr('viewBox') ? svgTag.attr('viewBox').split(' ') : [0,0, _data.svgDefault.width, _data.svgDefault.height];\r\n\r\n                        _data.viewBoxShift               = svgTag.attr(\"mapsvg:viewBoxShift\") || null;\r\n                        if(_data.viewBoxShift)\r\n                            _data.viewBoxShift = _data.viewBoxShift.split(' ');\r\n\r\n\r\n                        // Get geo-coordinates view  box from SVG file\r\n                        var geo               = svgTag.attr(\"mapsvg:geoViewBox\");\r\n                        if (geo) {\r\n                            geo = geo.split(\" \");\r\n                            if (geo.length == 4){\r\n                                _data.mapIsGeo = true;\r\n                                _data.geoCoordinates = true;\r\n                                var v = svgTag.attr(\"mapsvg:calibratedViewBox\");\r\n\r\n                                _data.geoViewBox = {leftLon: parseFloat(geo[0]),\r\n                                    topLat: parseFloat(geo[1]),\r\n                                    rightLon: parseFloat(geo[2]),\r\n                                    bottomLat: parseFloat(geo[3])\r\n                                };\r\n                                _data.mapLonDelta = _data.geoViewBox.rightLon - _data.geoViewBox.leftLon;\r\n                                _data.mapLatBottomDegree = _data.geoViewBox.bottomLat * 3.14159 / 180;\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                        $.each(_data.svgDefault.viewBox, function(i,v){\r\n                            _data.svgDefault.viewBox[i] = parseInt(v);\r\n                        });\r\n\r\n                        _data._viewBox  = (_data.options.viewBox.length==4 && _data.options.viewBox ) || _data.svgDefault.viewBox;\r\n                        if(_data.viewBoxShift && !_data.options.width && !_data.options.height && _data.options.viewBox.length==0){\r\n                            _data.options.width = _data.viewBoxShift[2];\r\n                            _data.options.width = _data.viewBoxShift[3];\r\n                        }\r\n\r\n                        $.each(_data._viewBox, function(i,v){\r\n                            _data._viewBox[i] = parseFloat(v);\r\n                        });\r\n\r\n\r\n\r\n                        svgTag.attr('preserveAspectRatio','xMidYMid meet');\r\n                        svgTag.attr('width','100%');\r\n                        svgTag.attr('height','100%');\r\n\r\n                        //// Adding moving sticky draggable image on background\r\n                        //if(_data.options.scrollBackground)\r\n                        //    _data.background = _data.R.rect(_data.svgDefault.viewBox[0],_data.svgDefault.viewBox[1],_data.svgDefault.viewBox[2],_data.svgDefault.viewBox[3]).attr({fill: _data.options.colors.background});\r\n\r\n                        _data.$svg.find('path, polygon, circle, ellipse, rect').each(function(index){\r\n                            var regionOptions;\r\n                            var id = $(this).attr('id');\r\n                            if(_data.options.regions && _data.options.regions[id]){\r\n                                regionOptions = _data.options.regions[id];\r\n                            }\r\n                            var region = new Region($(this), _data.options);\r\n                            _data.regions.push(region);\r\n                            _data.regionsDict[id] = index;\r\n                        });\r\n\r\n                        // Set size\r\n                        _this.setSize(_data.options.width, _data.options.height, _data.options.responsive);\r\n\r\n                        _data.$map.append(svgTag);\r\n\r\n                        // Set viewBox\r\n                        var v =  _data._viewBox;\r\n                        _this.setViewBox(v);\r\n\r\n                        _data.$map.append(_data.$svgStretcher);\r\n\r\n                        // SET Gauge colors\r\n                        _this.setGauge();\r\n\r\n\r\n                        // If there are markers, put them to the map\r\n                        var markers = _data.options.markers || _data.options.marks || [];\r\n                        _this.setMarkers(markers);\r\n                        //_this.setMarkersEditMode(_data.editMarkers.on);\r\n\r\n                        // Set scrollning\r\n                        _this.setScroll(_data.options.scroll);\r\n\r\n                        // Set zooming by mouswheel\r\n                        _this.setZoom(_data.options.zoom);\r\n\r\n                        // Set tooltips\r\n                        // tooltipsMode is deprecated, need this for backward compatibility\r\n                        if (_data.options.tooltipsMode)\r\n                            _data.options.tooltips.mode = _data.options.tooltipsMode;\r\n                        _this.setTooltips(_data.options.tooltips);\r\n\r\n                        // Set popovers\r\n                        // popover is deprecated (now it's popover), need this for backward compatibility\r\n                        if (_data.options.popover)\r\n                            _data.options.popovers = _data.options.popover;\r\n                        _this.setPopovers(_data.options.popovers);\r\n\r\n                        if(_data.options.cursor)\r\n                            _this.setCursor(_data.options.cursor);\r\n\r\n\r\n                        if(_browser.ie)//|| _browser.firefox)\r\n                            _this.mapAdjustStrokes();\r\n\r\n                        $(document).ready(function(){\r\n                            _this.setMenu();\r\n                        });\r\n\r\n                        /* EVENTS */\r\n\r\n                        _this.setEventHandlers();\r\n\r\n                        $('#'+_data.$map.attr('id')+' [title]').each(function(){this.removeAttribute('title')});\r\n                        $('#'+_data.$map.attr('id')+' title').remove();\r\n\r\n\r\n                        loading.hide();\r\n\r\n\r\n                        if(_data.options.afterLoad)\r\n                            _data.options.afterLoad.call(_this);\r\n\r\n                        _this.updateSize();\r\n                    } // end of AJAX callback\r\n                });// end of AJAX\r\n\r\n                return _this;\r\n\r\n            } // end of init\r\n\r\n        }; // end of methods\r\n\r\n        var _this = this.methods;\r\n\r\n\r\n\r\n    }; // end of mapSVG class\r\n\r\n\r\n    /** $.FN **/\r\n    $.fn.mapSvg = function( opts ) {\r\n\r\n        var id = $(this).attr('id');\r\n\r\n        if(typeof opts == 'object' && instances[id] === undefined){\r\n            instances[id] = new mapSVG(this, opts);\r\n            return instances[id].methods.init(opts, this);\r\n        }else if(instances[id]){\r\n            return instances[id].methods;\r\n        }else{\r\n            return instances;\r\n        }\r\n\r\n\r\n\r\n    }; // end of $.fn.mapSvg\r\n\r\n})( jQuery );\r\n\r\n\r\n// Tiny color\r\n// TinyColor v1.3.0\r\n// https://github.com/bgrins/TinyColor\r\n// Brian Grinstead, MIT License\r\n\r\n(function(Math) {\r\n\r\n    var trimLeft = /^\\s+/,\r\n        trimRight = /\\s+$/,\r\n        tinyCounter = 0,\r\n        mathRound = Math.round,\r\n        mathMin = Math.min,\r\n        mathMax = Math.max,\r\n        mathRandom = Math.random;\r\n\r\n    function tinycolor (color, opts) {\r\n\r\n        color = (color) ? color : '';\r\n        opts = opts || { };\r\n\r\n        // If input is already a tinycolor, return itself\r\n        if (color instanceof tinycolor) {\r\n            return color;\r\n        }\r\n        // If we are called as a function, call using new instead\r\n        if (!(this instanceof tinycolor)) {\r\n            return new tinycolor(color, opts);\r\n        }\r\n\r\n        var rgb = inputToRGB(color);\r\n        this._originalInput = color,\r\n            this._r = rgb.r,\r\n            this._g = rgb.g,\r\n            this._b = rgb.b,\r\n            this._a = rgb.a,\r\n            this._roundA = mathRound(100*this._a) / 100,\r\n            this._format = opts.format || rgb.format;\r\n        this._gradientType = opts.gradientType;\r\n\r\n        // Don't let the range of [0,255] come back in [0,1].\r\n        // Potentially lose a little bit of precision here, but will fix issues where\r\n        // .5 gets interpreted as half of the total, instead of half of 1\r\n        // If it was supposed to be 128, this was already taken care of by `inputToRgb`\r\n        if (this._r < 1) { this._r = mathRound(this._r); }\r\n        if (this._g < 1) { this._g = mathRound(this._g); }\r\n        if (this._b < 1) { this._b = mathRound(this._b); }\r\n\r\n        this._ok = rgb.ok;\r\n        this._tc_id = tinyCounter++;\r\n    }\r\n\r\n    tinycolor.prototype = {\r\n        isDark: function() {\r\n            return this.getBrightness() < 128;\r\n        },\r\n        isLight: function() {\r\n            return !this.isDark();\r\n        },\r\n        isValid: function() {\r\n            return this._ok;\r\n        },\r\n        getOriginalInput: function() {\r\n            return this._originalInput;\r\n        },\r\n        getFormat: function() {\r\n            return this._format;\r\n        },\r\n        getAlpha: function() {\r\n            return this._a;\r\n        },\r\n        getBrightness: function() {\r\n            //http://www.w3.org/TR/AERT#color-contrast\r\n            var rgb = this.toRgb();\r\n            return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\r\n        },\r\n        getLuminance: function() {\r\n            //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\r\n            var rgb = this.toRgb();\r\n            var RsRGB, GsRGB, BsRGB, R, G, B;\r\n            RsRGB = rgb.r/255;\r\n            GsRGB = rgb.g/255;\r\n            BsRGB = rgb.b/255;\r\n\r\n            if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\r\n            if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\r\n            if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\r\n            return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\r\n        },\r\n        setAlpha: function(value) {\r\n            this._a = boundAlpha(value);\r\n            this._roundA = mathRound(100*this._a) / 100;\r\n            return this;\r\n        },\r\n        toHsv: function() {\r\n            var hsv = rgbToHsv(this._r, this._g, this._b);\r\n            return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\r\n        },\r\n        toHsvString: function() {\r\n            var hsv = rgbToHsv(this._r, this._g, this._b);\r\n            var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\r\n            return (this._a == 1) ?\r\n            \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\r\n            \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\r\n        },\r\n        toHsl: function() {\r\n            var hsl = rgbToHsl(this._r, this._g, this._b);\r\n            return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\r\n        },\r\n        toHslString: function() {\r\n            var hsl = rgbToHsl(this._r, this._g, this._b);\r\n            var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\r\n            return (this._a == 1) ?\r\n            \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\r\n            \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\r\n        },\r\n        toHex: function(allow3Char) {\r\n            return rgbToHex(this._r, this._g, this._b, allow3Char);\r\n        },\r\n        toHexString: function(allow3Char) {\r\n            return '#' + this.toHex(allow3Char);\r\n        },\r\n        toHex8: function() {\r\n            return rgbaToHex(this._r, this._g, this._b, this._a);\r\n        },\r\n        toHex8String: function() {\r\n            return '#' + this.toHex8();\r\n        },\r\n        toRgb: function() {\r\n            return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\r\n        },\r\n        toRgbString: function() {\r\n            return (this._a == 1) ?\r\n            \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\r\n            \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\r\n        },\r\n        toPercentageRgb: function() {\r\n            return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\r\n        },\r\n        toPercentageRgbString: function() {\r\n            return (this._a == 1) ?\r\n            \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\r\n            \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\r\n        },\r\n        toName: function() {\r\n            if (this._a === 0) {\r\n                return \"transparent\";\r\n            }\r\n\r\n            if (this._a < 1) {\r\n                return false;\r\n            }\r\n\r\n            return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\r\n        },\r\n        toFilter: function(secondColor) {\r\n            var hex8String = '#' + rgbaToHex(this._r, this._g, this._b, this._a);\r\n            var secondHex8String = hex8String;\r\n            var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\r\n\r\n            if (secondColor) {\r\n                var s = tinycolor(secondColor);\r\n                secondHex8String = s.toHex8String();\r\n            }\r\n\r\n            return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\r\n        },\r\n        toString: function(format) {\r\n            var formatSet = !!format;\r\n            format = format || this._format;\r\n\r\n            var formattedString = false;\r\n            var hasAlpha = this._a < 1 && this._a >= 0;\r\n            var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"name\");\r\n\r\n            if (needsAlphaFormat) {\r\n                // Special case for \"transparent\", all other non-alpha formats\r\n                // will return rgba when there is transparency.\r\n                if (format === \"name\" && this._a === 0) {\r\n                    return this.toName();\r\n                }\r\n                return this.toRgbString();\r\n            }\r\n            if (format === \"rgb\") {\r\n                formattedString = this.toRgbString();\r\n            }\r\n            if (format === \"prgb\") {\r\n                formattedString = this.toPercentageRgbString();\r\n            }\r\n            if (format === \"hex\" || format === \"hex6\") {\r\n                formattedString = this.toHexString();\r\n            }\r\n            if (format === \"hex3\") {\r\n                formattedString = this.toHexString(true);\r\n            }\r\n            if (format === \"hex8\") {\r\n                formattedString = this.toHex8String();\r\n            }\r\n            if (format === \"name\") {\r\n                formattedString = this.toName();\r\n            }\r\n            if (format === \"hsl\") {\r\n                formattedString = this.toHslString();\r\n            }\r\n            if (format === \"hsv\") {\r\n                formattedString = this.toHsvString();\r\n            }\r\n\r\n            return formattedString || this.toHexString();\r\n        },\r\n        clone: function() {\r\n            return tinycolor(this.toString());\r\n        },\r\n\r\n        _applyModification: function(fn, args) {\r\n            var color = fn.apply(null, [this].concat([].slice.call(args)));\r\n            this._r = color._r;\r\n            this._g = color._g;\r\n            this._b = color._b;\r\n            this.setAlpha(color._a);\r\n            return this;\r\n        },\r\n        lighten: function() {\r\n            return this._applyModification(lighten, arguments);\r\n        },\r\n        brighten: function() {\r\n            return this._applyModification(brighten, arguments);\r\n        },\r\n        darken: function() {\r\n            return this._applyModification(darken, arguments);\r\n        },\r\n        desaturate: function() {\r\n            return this._applyModification(desaturate, arguments);\r\n        },\r\n        saturate: function() {\r\n            return this._applyModification(saturate, arguments);\r\n        },\r\n        greyscale: function() {\r\n            return this._applyModification(greyscale, arguments);\r\n        },\r\n        spin: function() {\r\n            return this._applyModification(spin, arguments);\r\n        },\r\n\r\n        _applyCombination: function(fn, args) {\r\n            return fn.apply(null, [this].concat([].slice.call(args)));\r\n        },\r\n        analogous: function() {\r\n            return this._applyCombination(analogous, arguments);\r\n        },\r\n        complement: function() {\r\n            return this._applyCombination(complement, arguments);\r\n        },\r\n        monochromatic: function() {\r\n            return this._applyCombination(monochromatic, arguments);\r\n        },\r\n        splitcomplement: function() {\r\n            return this._applyCombination(splitcomplement, arguments);\r\n        },\r\n        triad: function() {\r\n            return this._applyCombination(triad, arguments);\r\n        },\r\n        tetrad: function() {\r\n            return this._applyCombination(tetrad, arguments);\r\n        }\r\n    };\r\n\r\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\r\n// String input requires \"1.0\" as input, so 1 will be treated as 1\r\n    tinycolor.fromRatio = function(color, opts) {\r\n        if (typeof color == \"object\") {\r\n            var newColor = {};\r\n            for (var i in color) {\r\n                if (color.hasOwnProperty(i)) {\r\n                    if (i === \"a\") {\r\n                        newColor[i] = color[i];\r\n                    }\r\n                    else {\r\n                        newColor[i] = convertToPercentage(color[i]);\r\n                    }\r\n                }\r\n            }\r\n            color = newColor;\r\n        }\r\n\r\n        return tinycolor(color, opts);\r\n    };\r\n\r\n// Given a string or object, convert that input to RGB\r\n// Possible string inputs:\r\n//\r\n//     \"red\"\r\n//     \"#f00\" or \"f00\"\r\n//     \"#ff0000\" or \"ff0000\"\r\n//     \"#ff000000\" or \"ff000000\"\r\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\r\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\r\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\r\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\r\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\r\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\r\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\r\n//\r\n    function inputToRGB(color) {\r\n\r\n        var rgb = { r: 0, g: 0, b: 0 };\r\n        var a = 1;\r\n        var ok = false;\r\n        var format = false;\r\n\r\n        if (typeof color == \"string\") {\r\n            color = stringInputToObject(color);\r\n        }\r\n\r\n        if (typeof color == \"object\") {\r\n            if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\r\n                rgb = rgbToRgb(color.r, color.g, color.b);\r\n                ok = true;\r\n                format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\r\n            }\r\n            else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\r\n                color.s = convertToPercentage(color.s);\r\n                color.v = convertToPercentage(color.v);\r\n                rgb = hsvToRgb(color.h, color.s, color.v);\r\n                ok = true;\r\n                format = \"hsv\";\r\n            }\r\n            else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\r\n                color.s = convertToPercentage(color.s);\r\n                color.l = convertToPercentage(color.l);\r\n                rgb = hslToRgb(color.h, color.s, color.l);\r\n                ok = true;\r\n                format = \"hsl\";\r\n            }\r\n\r\n            if (color.hasOwnProperty(\"a\")) {\r\n                a = color.a;\r\n            }\r\n        }\r\n\r\n        a = boundAlpha(a);\r\n\r\n        return {\r\n            ok: ok,\r\n            format: color.format || format,\r\n            r: mathMin(255, mathMax(rgb.r, 0)),\r\n            g: mathMin(255, mathMax(rgb.g, 0)),\r\n            b: mathMin(255, mathMax(rgb.b, 0)),\r\n            a: a\r\n        };\r\n    }\r\n\r\n\r\n// Conversion Functions\r\n// --------------------\r\n\r\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\r\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\r\n\r\n// `rgbToRgb`\r\n// Handle bounds / percentage checking to conform to CSS color spec\r\n// <http://www.w3.org/TR/css3-color/>\r\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\r\n// *Returns:* { r, g, b } in [0, 255]\r\n    function rgbToRgb(r, g, b){\r\n        return {\r\n            r: bound01(r, 255) * 255,\r\n            g: bound01(g, 255) * 255,\r\n            b: bound01(b, 255) * 255\r\n        };\r\n    }\r\n\r\n// `rgbToHsl`\r\n// Converts an RGB color value to HSL.\r\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\r\n// *Returns:* { h, s, l } in [0,1]\r\n    function rgbToHsl(r, g, b) {\r\n\r\n        r = bound01(r, 255);\r\n        g = bound01(g, 255);\r\n        b = bound01(b, 255);\r\n\r\n        var max = mathMax(r, g, b), min = mathMin(r, g, b);\r\n        var h, s, l = (max + min) / 2;\r\n\r\n        if(max == min) {\r\n            h = s = 0; // achromatic\r\n        }\r\n        else {\r\n            var d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            switch(max) {\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n\r\n            h /= 6;\r\n        }\r\n\r\n        return { h: h, s: s, l: l };\r\n    }\r\n\r\n// `hslToRgb`\r\n// Converts an HSL color value to RGB.\r\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\r\n// *Returns:* { r, g, b } in the set [0, 255]\r\n    function hslToRgb(h, s, l) {\r\n        var r, g, b;\r\n\r\n        h = bound01(h, 360);\r\n        s = bound01(s, 100);\r\n        l = bound01(l, 100);\r\n\r\n        function hue2rgb(p, q, t) {\r\n            if(t < 0) t += 1;\r\n            if(t > 1) t -= 1;\r\n            if(t < 1/6) return p + (q - p) * 6 * t;\r\n            if(t < 1/2) return q;\r\n            if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n            return p;\r\n        }\r\n\r\n        if(s === 0) {\r\n            r = g = b = l; // achromatic\r\n        }\r\n        else {\r\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n            var p = 2 * l - q;\r\n            r = hue2rgb(p, q, h + 1/3);\r\n            g = hue2rgb(p, q, h);\r\n            b = hue2rgb(p, q, h - 1/3);\r\n        }\r\n\r\n        return { r: r * 255, g: g * 255, b: b * 255 };\r\n    }\r\n\r\n// `rgbToHsv`\r\n// Converts an RGB color value to HSV\r\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\r\n// *Returns:* { h, s, v } in [0,1]\r\n    function rgbToHsv(r, g, b) {\r\n\r\n        r = bound01(r, 255);\r\n        g = bound01(g, 255);\r\n        b = bound01(b, 255);\r\n\r\n        var max = mathMax(r, g, b), min = mathMin(r, g, b);\r\n        var h, s, v = max;\r\n\r\n        var d = max - min;\r\n        s = max === 0 ? 0 : d / max;\r\n\r\n        if(max == min) {\r\n            h = 0; // achromatic\r\n        }\r\n        else {\r\n            switch(max) {\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n            h /= 6;\r\n        }\r\n        return { h: h, s: s, v: v };\r\n    }\r\n\r\n// `hsvToRgb`\r\n// Converts an HSV color value to RGB.\r\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\r\n// *Returns:* { r, g, b } in the set [0, 255]\r\n    function hsvToRgb(h, s, v) {\r\n\r\n        h = bound01(h, 360) * 6;\r\n        s = bound01(s, 100);\r\n        v = bound01(v, 100);\r\n\r\n        var i = Math.floor(h),\r\n            f = h - i,\r\n            p = v * (1 - s),\r\n            q = v * (1 - f * s),\r\n            t = v * (1 - (1 - f) * s),\r\n            mod = i % 6,\r\n            r = [v, q, p, p, t, v][mod],\r\n            g = [t, v, v, q, p, p][mod],\r\n            b = [p, p, t, v, v, q][mod];\r\n\r\n        return { r: r * 255, g: g * 255, b: b * 255 };\r\n    }\r\n\r\n// `rgbToHex`\r\n// Converts an RGB color to hex\r\n// Assumes r, g, and b are contained in the set [0, 255]\r\n// Returns a 3 or 6 character hex\r\n    function rgbToHex(r, g, b, allow3Char) {\r\n\r\n        var hex = [\r\n            pad2(mathRound(r).toString(16)),\r\n            pad2(mathRound(g).toString(16)),\r\n            pad2(mathRound(b).toString(16))\r\n        ];\r\n\r\n        // Return a 3 character hex if possible\r\n        if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\r\n            return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\r\n        }\r\n\r\n        return hex.join(\"\");\r\n    }\r\n\r\n// `rgbaToHex`\r\n// Converts an RGBA color plus alpha transparency to hex\r\n// Assumes r, g, b and a are contained in the set [0, 255]\r\n// Returns an 8 character hex\r\n    function rgbaToHex(r, g, b, a) {\r\n\r\n        var hex = [\r\n            pad2(convertDecimalToHex(a)),\r\n            pad2(mathRound(r).toString(16)),\r\n            pad2(mathRound(g).toString(16)),\r\n            pad2(mathRound(b).toString(16))\r\n        ];\r\n\r\n        return hex.join(\"\");\r\n    }\r\n\r\n// `equals`\r\n// Can be called with any tinycolor input\r\n    tinycolor.equals = function (color1, color2) {\r\n        if (!color1 || !color2) { return false; }\r\n        return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\r\n    };\r\n\r\n    tinycolor.random = function() {\r\n        return tinycolor.fromRatio({\r\n            r: mathRandom(),\r\n            g: mathRandom(),\r\n            b: mathRandom()\r\n        });\r\n    };\r\n\r\n\r\n// Modification Functions\r\n// ----------------------\r\n// Thanks to less.js for some of the basics here\r\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\r\n\r\n    function desaturate(color, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 10);\r\n        var hsl = tinycolor(color).toHsl();\r\n        hsl.s -= amount / 100;\r\n        hsl.s = clamp01(hsl.s);\r\n        return tinycolor(hsl);\r\n    }\r\n\r\n    function saturate(color, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 10);\r\n        var hsl = tinycolor(color).toHsl();\r\n        hsl.s += amount / 100;\r\n        hsl.s = clamp01(hsl.s);\r\n        return tinycolor(hsl);\r\n    }\r\n\r\n    function greyscale(color) {\r\n        return tinycolor(color).desaturate(100);\r\n    }\r\n\r\n    function lighten (color, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 10);\r\n        var hsl = tinycolor(color).toHsl();\r\n        hsl.l += amount / 100;\r\n        hsl.l = clamp01(hsl.l);\r\n        return tinycolor(hsl);\r\n    }\r\n\r\n    function brighten(color, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 10);\r\n        var rgb = tinycolor(color).toRgb();\r\n        rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\r\n        rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\r\n        rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\r\n        return tinycolor(rgb);\r\n    }\r\n\r\n    function darken (color, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 10);\r\n        var hsl = tinycolor(color).toHsl();\r\n        hsl.l -= amount / 100;\r\n        hsl.l = clamp01(hsl.l);\r\n        return tinycolor(hsl);\r\n    }\r\n\r\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\r\n// Values outside of this range will be wrapped into this range.\r\n    function spin(color, amount) {\r\n        var hsl = tinycolor(color).toHsl();\r\n        var hue = (hsl.h + amount) % 360;\r\n        hsl.h = hue < 0 ? 360 + hue : hue;\r\n        return tinycolor(hsl);\r\n    }\r\n\r\n// Combination Functions\r\n// ---------------------\r\n// Thanks to jQuery xColor for some of the ideas behind these\r\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\r\n\r\n    function complement(color) {\r\n        var hsl = tinycolor(color).toHsl();\r\n        hsl.h = (hsl.h + 180) % 360;\r\n        return tinycolor(hsl);\r\n    }\r\n\r\n    function triad(color) {\r\n        var hsl = tinycolor(color).toHsl();\r\n        var h = hsl.h;\r\n        return [\r\n            tinycolor(color),\r\n            tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\r\n            tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\r\n        ];\r\n    }\r\n\r\n    function tetrad(color) {\r\n        var hsl = tinycolor(color).toHsl();\r\n        var h = hsl.h;\r\n        return [\r\n            tinycolor(color),\r\n            tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\r\n            tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\r\n            tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\r\n        ];\r\n    }\r\n\r\n    function splitcomplement(color) {\r\n        var hsl = tinycolor(color).toHsl();\r\n        var h = hsl.h;\r\n        return [\r\n            tinycolor(color),\r\n            tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\r\n            tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\r\n        ];\r\n    }\r\n\r\n    function analogous(color, results, slices) {\r\n        results = results || 6;\r\n        slices = slices || 30;\r\n\r\n        var hsl = tinycolor(color).toHsl();\r\n        var part = 360 / slices;\r\n        var ret = [tinycolor(color)];\r\n\r\n        for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\r\n            hsl.h = (hsl.h + part) % 360;\r\n            ret.push(tinycolor(hsl));\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function monochromatic(color, results) {\r\n        results = results || 6;\r\n        var hsv = tinycolor(color).toHsv();\r\n        var h = hsv.h, s = hsv.s, v = hsv.v;\r\n        var ret = [];\r\n        var modification = 1 / results;\r\n\r\n        while (results--) {\r\n            ret.push(tinycolor({ h: h, s: s, v: v}));\r\n            v = (v + modification) % 1;\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n// Utility Functions\r\n// ---------------------\r\n\r\n    tinycolor.mix = function(color1, color2, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 50);\r\n\r\n        var rgb1 = tinycolor(color1).toRgb();\r\n        var rgb2 = tinycolor(color2).toRgb();\r\n\r\n        var p = amount / 100;\r\n        var w = p * 2 - 1;\r\n        var a = rgb2.a - rgb1.a;\r\n\r\n        var w1;\r\n\r\n        if (w * a == -1) {\r\n            w1 = w;\r\n        } else {\r\n            w1 = (w + a) / (1 + w * a);\r\n        }\r\n\r\n        w1 = (w1 + 1) / 2;\r\n\r\n        var w2 = 1 - w1;\r\n\r\n        var rgba = {\r\n            r: rgb2.r * w1 + rgb1.r * w2,\r\n            g: rgb2.g * w1 + rgb1.g * w2,\r\n            b: rgb2.b * w1 + rgb1.b * w2,\r\n            a: rgb2.a * p  + rgb1.a * (1 - p)\r\n        };\r\n\r\n        return tinycolor(rgba);\r\n    };\r\n\r\n\r\n// Readability Functions\r\n// ---------------------\r\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\r\n\r\n// `contrast`\r\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\r\n    tinycolor.readability = function(color1, color2) {\r\n        var c1 = tinycolor(color1);\r\n        var c2 = tinycolor(color2);\r\n        return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\r\n    };\r\n\r\n// `isReadable`\r\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\r\n// The third argument is an optional Object.\r\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\r\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\r\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\r\n\r\n// *Example*\r\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\r\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\r\n    tinycolor.isReadable = function(color1, color2, wcag2) {\r\n        var readability = tinycolor.readability(color1, color2);\r\n        var wcag2Parms, out;\r\n\r\n        out = false;\r\n\r\n        wcag2Parms = validateWCAG2Parms(wcag2);\r\n        switch (wcag2Parms.level + wcag2Parms.size) {\r\n            case \"AAsmall\":\r\n            case \"AAAlarge\":\r\n                out = readability >= 4.5;\r\n                break;\r\n            case \"AAlarge\":\r\n                out = readability >= 3;\r\n                break;\r\n            case \"AAAsmall\":\r\n                out = readability >= 7;\r\n                break;\r\n        }\r\n        return out;\r\n\r\n    };\r\n\r\n// `mostReadable`\r\n// Given a base color and a list of possible foreground or background\r\n// colors for that base, returns the most readable color.\r\n// Optionally returns Black or White if the most readable color is unreadable.\r\n// *Example*\r\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\r\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\r\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\r\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\r\n    tinycolor.mostReadable = function(baseColor, colorList, args) {\r\n        var bestColor = null;\r\n        var bestScore = 0;\r\n        var readability;\r\n        var includeFallbackColors, level, size ;\r\n        args = args || {};\r\n        includeFallbackColors = args.includeFallbackColors ;\r\n        level = args.level;\r\n        size = args.size;\r\n\r\n        for (var i= 0; i < colorList.length ; i++) {\r\n            readability = tinycolor.readability(baseColor, colorList[i]);\r\n            if (readability > bestScore) {\r\n                bestScore = readability;\r\n                bestColor = tinycolor(colorList[i]);\r\n            }\r\n        }\r\n\r\n        if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\r\n            return bestColor;\r\n        }\r\n        else {\r\n            args.includeFallbackColors=false;\r\n            return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\r\n        }\r\n    };\r\n\r\n\r\n// Big List of Colors\r\n// ------------------\r\n// <http://www.w3.org/TR/css3-color/#svg-color>\r\n    var names = tinycolor.names = {\r\n        aliceblue: \"f0f8ff\",\r\n        antiquewhite: \"faebd7\",\r\n        aqua: \"0ff\",\r\n        aquamarine: \"7fffd4\",\r\n        azure: \"f0ffff\",\r\n        beige: \"f5f5dc\",\r\n        bisque: \"ffe4c4\",\r\n        black: \"000\",\r\n        blanchedalmond: \"ffebcd\",\r\n        blue: \"00f\",\r\n        blueviolet: \"8a2be2\",\r\n        brown: \"a52a2a\",\r\n        burlywood: \"deb887\",\r\n        burntsienna: \"ea7e5d\",\r\n        cadetblue: \"5f9ea0\",\r\n        chartreuse: \"7fff00\",\r\n        chocolate: \"d2691e\",\r\n        coral: \"ff7f50\",\r\n        cornflowerblue: \"6495ed\",\r\n        cornsilk: \"fff8dc\",\r\n        crimson: \"dc143c\",\r\n        cyan: \"0ff\",\r\n        darkblue: \"00008b\",\r\n        darkcyan: \"008b8b\",\r\n        darkgoldenrod: \"b8860b\",\r\n        darkgray: \"a9a9a9\",\r\n        darkgreen: \"006400\",\r\n        darkgrey: \"a9a9a9\",\r\n        darkkhaki: \"bdb76b\",\r\n        darkmagenta: \"8b008b\",\r\n        darkolivegreen: \"556b2f\",\r\n        darkorange: \"ff8c00\",\r\n        darkorchid: \"9932cc\",\r\n        darkred: \"8b0000\",\r\n        darksalmon: \"e9967a\",\r\n        darkseagreen: \"8fbc8f\",\r\n        darkslateblue: \"483d8b\",\r\n        darkslategray: \"2f4f4f\",\r\n        darkslategrey: \"2f4f4f\",\r\n        darkturquoise: \"00ced1\",\r\n        darkviolet: \"9400d3\",\r\n        deeppink: \"ff1493\",\r\n        deepskyblue: \"00bfff\",\r\n        dimgray: \"696969\",\r\n        dimgrey: \"696969\",\r\n        dodgerblue: \"1e90ff\",\r\n        firebrick: \"b22222\",\r\n        floralwhite: \"fffaf0\",\r\n        forestgreen: \"228b22\",\r\n        fuchsia: \"f0f\",\r\n        gainsboro: \"dcdcdc\",\r\n        ghostwhite: \"f8f8ff\",\r\n        gold: \"ffd700\",\r\n        goldenrod: \"daa520\",\r\n        gray: \"808080\",\r\n        green: \"008000\",\r\n        greenyellow: \"adff2f\",\r\n        grey: \"808080\",\r\n        honeydew: \"f0fff0\",\r\n        hotpink: \"ff69b4\",\r\n        indianred: \"cd5c5c\",\r\n        indigo: \"4b0082\",\r\n        ivory: \"fffff0\",\r\n        khaki: \"f0e68c\",\r\n        lavender: \"e6e6fa\",\r\n        lavenderblush: \"fff0f5\",\r\n        lawngreen: \"7cfc00\",\r\n        lemonchiffon: \"fffacd\",\r\n        lightblue: \"add8e6\",\r\n        lightcoral: \"f08080\",\r\n        lightcyan: \"e0ffff\",\r\n        lightgoldenrodyellow: \"fafad2\",\r\n        lightgray: \"d3d3d3\",\r\n        lightgreen: \"90ee90\",\r\n        lightgrey: \"d3d3d3\",\r\n        lightpink: \"ffb6c1\",\r\n        lightsalmon: \"ffa07a\",\r\n        lightseagreen: \"20b2aa\",\r\n        lightskyblue: \"87cefa\",\r\n        lightslategray: \"789\",\r\n        lightslategrey: \"789\",\r\n        lightsteelblue: \"b0c4de\",\r\n        lightyellow: \"ffffe0\",\r\n        lime: \"0f0\",\r\n        limegreen: \"32cd32\",\r\n        linen: \"faf0e6\",\r\n        magenta: \"f0f\",\r\n        maroon: \"800000\",\r\n        mediumaquamarine: \"66cdaa\",\r\n        mediumblue: \"0000cd\",\r\n        mediumorchid: \"ba55d3\",\r\n        mediumpurple: \"9370db\",\r\n        mediumseagreen: \"3cb371\",\r\n        mediumslateblue: \"7b68ee\",\r\n        mediumspringgreen: \"00fa9a\",\r\n        mediumturquoise: \"48d1cc\",\r\n        mediumvioletred: \"c71585\",\r\n        midnightblue: \"191970\",\r\n        mintcream: \"f5fffa\",\r\n        mistyrose: \"ffe4e1\",\r\n        moccasin: \"ffe4b5\",\r\n        navajowhite: \"ffdead\",\r\n        navy: \"000080\",\r\n        oldlace: \"fdf5e6\",\r\n        olive: \"808000\",\r\n        olivedrab: \"6b8e23\",\r\n        orange: \"ffa500\",\r\n        orangered: \"ff4500\",\r\n        orchid: \"da70d6\",\r\n        palegoldenrod: \"eee8aa\",\r\n        palegreen: \"98fb98\",\r\n        paleturquoise: \"afeeee\",\r\n        palevioletred: \"db7093\",\r\n        papayawhip: \"ffefd5\",\r\n        peachpuff: \"ffdab9\",\r\n        peru: \"cd853f\",\r\n        pink: \"ffc0cb\",\r\n        plum: \"dda0dd\",\r\n        powderblue: \"b0e0e6\",\r\n        purple: \"800080\",\r\n        rebeccapurple: \"663399\",\r\n        red: \"f00\",\r\n        rosybrown: \"bc8f8f\",\r\n        royalblue: \"4169e1\",\r\n        saddlebrown: \"8b4513\",\r\n        salmon: \"fa8072\",\r\n        sandybrown: \"f4a460\",\r\n        seagreen: \"2e8b57\",\r\n        seashell: \"fff5ee\",\r\n        sienna: \"a0522d\",\r\n        silver: \"c0c0c0\",\r\n        skyblue: \"87ceeb\",\r\n        slateblue: \"6a5acd\",\r\n        slategray: \"708090\",\r\n        slategrey: \"708090\",\r\n        snow: \"fffafa\",\r\n        springgreen: \"00ff7f\",\r\n        steelblue: \"4682b4\",\r\n        tan: \"d2b48c\",\r\n        teal: \"008080\",\r\n        thistle: \"d8bfd8\",\r\n        tomato: \"ff6347\",\r\n        turquoise: \"40e0d0\",\r\n        violet: \"ee82ee\",\r\n        wheat: \"f5deb3\",\r\n        white: \"fff\",\r\n        whitesmoke: \"f5f5f5\",\r\n        yellow: \"ff0\",\r\n        yellowgreen: \"9acd32\"\r\n    };\r\n\r\n// Make it easy to access colors via `hexNames[hex]`\r\n    var hexNames = tinycolor.hexNames = flip(names);\r\n\r\n\r\n// Utilities\r\n// ---------\r\n\r\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\r\n    function flip(o) {\r\n        var flipped = { };\r\n        for (var i in o) {\r\n            if (o.hasOwnProperty(i)) {\r\n                flipped[o[i]] = i;\r\n            }\r\n        }\r\n        return flipped;\r\n    }\r\n\r\n// Return a valid alpha value [0,1] with all invalid values being set to 1\r\n    function boundAlpha(a) {\r\n        a = parseFloat(a);\r\n\r\n        if (isNaN(a) || a < 0 || a > 1) {\r\n            a = 1;\r\n        }\r\n\r\n        return a;\r\n    }\r\n\r\n// Take input from [0, n] and return it as [0, 1]\r\n    function bound01(n, max) {\r\n        if (isOnePointZero(n)) { n = \"100%\"; }\r\n\r\n        var processPercent = isPercentage(n);\r\n        n = mathMin(max, mathMax(0, parseFloat(n)));\r\n\r\n        // Automatically convert percentage into number\r\n        if (processPercent) {\r\n            n = parseInt(n * max, 10) / 100;\r\n        }\r\n\r\n        // Handle floating point rounding errors\r\n        if ((Math.abs(n - max) < 0.000001)) {\r\n            return 1;\r\n        }\r\n\r\n        // Convert into [0, 1] range if it isn't already\r\n        return (n % max) / parseFloat(max);\r\n    }\r\n\r\n// Force a number between 0 and 1\r\n    function clamp01(val) {\r\n        return mathMin(1, mathMax(0, val));\r\n    }\r\n\r\n// Parse a base-16 hex value into a base-10 integer\r\n    function parseIntFromHex(val) {\r\n        return parseInt(val, 16);\r\n    }\r\n\r\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\r\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\r\n    function isOnePointZero(n) {\r\n        return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\r\n    }\r\n\r\n// Check to see if string passed in is a percentage\r\n    function isPercentage(n) {\r\n        return typeof n === \"string\" && n.indexOf('%') != -1;\r\n    }\r\n\r\n// Force a hex value to have 2 characters\r\n    function pad2(c) {\r\n        return c.length == 1 ? '0' + c : '' + c;\r\n    }\r\n\r\n// Replace a decimal with it's percentage value\r\n    function convertToPercentage(n) {\r\n        if (n <= 1) {\r\n            n = (n * 100) + \"%\";\r\n        }\r\n\r\n        return n;\r\n    }\r\n\r\n// Converts a decimal to a hex value\r\n    function convertDecimalToHex(d) {\r\n        return Math.round(parseFloat(d) * 255).toString(16);\r\n    }\r\n// Converts a hex value to a decimal\r\n    function convertHexToDecimal(h) {\r\n        return (parseIntFromHex(h) / 255);\r\n    }\r\n\r\n    var matchers = (function() {\r\n\r\n        // <http://www.w3.org/TR/css3-values/#integers>\r\n        var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\r\n\r\n        // <http://www.w3.org/TR/css3-values/#number-value>\r\n        var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\r\n\r\n        // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\r\n        var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\r\n\r\n        // Actual matching.\r\n        // Parentheses and commas are optional, but not required.\r\n        // Whitespace can take the place of commas or opening paren\r\n        var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\r\n        var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\r\n\r\n        return {\r\n            CSS_UNIT: new RegExp(CSS_UNIT),\r\n            rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\r\n            rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\r\n            hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\r\n            hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\r\n            hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\r\n            hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\r\n            hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\r\n            hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\r\n            hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\r\n        };\r\n    })();\r\n\r\n// `isValidCSSUnit`\r\n// Take in a single string / number and check to see if it looks like a CSS unit\r\n// (see `matchers` above for definition).\r\n    function isValidCSSUnit(color) {\r\n        return !!matchers.CSS_UNIT.exec(color);\r\n    }\r\n\r\n// `stringInputToObject`\r\n// Permissive string parsing.  Take in a number of formats, and output an object\r\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\r\n    function stringInputToObject(color) {\r\n\r\n        color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\r\n        var named = false;\r\n        if (names[color]) {\r\n            color = names[color];\r\n            named = true;\r\n        }\r\n        else if (color == 'transparent') {\r\n            return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\r\n        }\r\n\r\n        // Try to match string input using regular expressions.\r\n        // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\r\n        // Just return an object and let the conversion functions handle that.\r\n        // This way the result will be the same whether the tinycolor is initialized with string or object.\r\n        var match;\r\n        if ((match = matchers.rgb.exec(color))) {\r\n            return { r: match[1], g: match[2], b: match[3] };\r\n        }\r\n        if ((match = matchers.rgba.exec(color))) {\r\n            return { r: match[1], g: match[2], b: match[3], a: match[4] };\r\n        }\r\n        if ((match = matchers.hsl.exec(color))) {\r\n            return { h: match[1], s: match[2], l: match[3] };\r\n        }\r\n        if ((match = matchers.hsla.exec(color))) {\r\n            return { h: match[1], s: match[2], l: match[3], a: match[4] };\r\n        }\r\n        if ((match = matchers.hsv.exec(color))) {\r\n            return { h: match[1], s: match[2], v: match[3] };\r\n        }\r\n        if ((match = matchers.hsva.exec(color))) {\r\n            return { h: match[1], s: match[2], v: match[3], a: match[4] };\r\n        }\r\n        if ((match = matchers.hex8.exec(color))) {\r\n            return {\r\n                a: convertHexToDecimal(match[1]),\r\n                r: parseIntFromHex(match[2]),\r\n                g: parseIntFromHex(match[3]),\r\n                b: parseIntFromHex(match[4]),\r\n                format: named ? \"name\" : \"hex8\"\r\n            };\r\n        }\r\n        if ((match = matchers.hex6.exec(color))) {\r\n            return {\r\n                r: parseIntFromHex(match[1]),\r\n                g: parseIntFromHex(match[2]),\r\n                b: parseIntFromHex(match[3]),\r\n                format: named ? \"name\" : \"hex\"\r\n            };\r\n        }\r\n        if ((match = matchers.hex3.exec(color))) {\r\n            return {\r\n                r: parseIntFromHex(match[1] + '' + match[1]),\r\n                g: parseIntFromHex(match[2] + '' + match[2]),\r\n                b: parseIntFromHex(match[3] + '' + match[3]),\r\n                format: named ? \"name\" : \"hex\"\r\n            };\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function validateWCAG2Parms(parms) {\r\n        // return valid WCAG2 parms for isReadable.\r\n        // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\r\n        var level, size;\r\n        parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\r\n        level = (parms.level || \"AA\").toUpperCase();\r\n        size = (parms.size || \"small\").toLowerCase();\r\n        if (level !== \"AA\" && level !== \"AAA\") {\r\n            level = \"AA\";\r\n        }\r\n        if (size !== \"small\" && size !== \"large\") {\r\n            size = \"small\";\r\n        }\r\n        return {\"level\":level, \"size\":size};\r\n    }\r\n\r\n// Node: Export function\r\n    if (typeof module !== \"undefined\" && module.exports) {\r\n        module.exports = tinycolor;\r\n    }\r\n// AMD/requirejs: Define the module\r\n    else if (typeof define === 'function' && define.amd) {\r\n        define(function () {return tinycolor;});\r\n    }\r\n// Browser: Expose to window\r\n    else {\r\n        window.tinycolor = tinycolor;\r\n    }\r\n\r\n})(Math);\r\n\r\n","// Countries\nvar country_arr = new Array(\"Afghanistan\", \"Albania\", \"Algeria\", \"American Samoa\", \"Angola\", \"Anguilla\", \"Antartica\", \"Antigua and Barbuda\", \"Argentina\", \"Armenia\", \"Aruba\", \"Ashmore and Cartier Island\", \"Australia\", \"Austria\", \"Azerbaijan\", \"Bahamas\", \"Bahrain\", \"Bangladesh\", \"Barbados\", \"Belarus\", \"Belgium\", \"Belize\", \"Benin\", \"Bermuda\", \"Bhutan\", \"Bolivia\", \"Bosnia and Herzegovina\", \"Botswana\", \"Brazil\", \"British Virgin Islands\", \"Brunei\", \"Bulgaria\", \"Burkina Faso\", \"Burma\", \"Burundi\", \"Cambodia\", \"Cameroon\", \"Canada\", \"Cape Verde\", \"Cayman Islands\", \"Central African Republic\", \"Chad\", \"Chile\", \"China\", \"Christmas Island\", \"Clipperton Island\", \"Cocos (Keeling) Islands\", \"Colombia\", \"Comoros\", \"Congo, Democratic Republic of the\", \"Congo, Republic of the\", \"Cook Islands\", \"Costa Rica\", \"Cote d'Ivoire\", \"Croatia\", \"Cuba\", \"Cyprus\", \"Czech Republic\", \"Denmark\", \"Djibouti\", \"Dominica\", \"Dominican Republic\", \"Ecuador\", \"Egypt\", \"El Salvador\", \"Equatorial Guinea\", \"Eritrea\", \"Estonia\", \"Ethiopia\", \"Europa Island\", \"Falkland Islands (Islas Malvinas)\", \"Faroe Islands\", \"Fiji\", \"Finland\", \"France\", \"French Guiana\", \"French Polynesia\", \"French Southern and Antarctic Lands\", \"Gabon\", \"Gambia, The\", \"Gaza Strip\", \"Georgia\", \"Germany\", \"Ghana\", \"Gibraltar\", \"Glorioso Islands\", \"Greece\", \"Greenland\", \"Grenada\", \"Guadeloupe\", \"Guam\", \"Guatemala\", \"Guernsey\", \"Guinea\", \"Guinea-Bissau\", \"Guyana\", \"Haiti\", \"Heard Island and McDonald Islands\", \"Holy See (Vatican City)\", \"Honduras\", \"Hong Kong\", \"Howland Island\", \"Hungary\", \"Iceland\", \"India\", \"Indonesia\", \"Iran\", \"Iraq\", \"Ireland\", \"Ireland, Northern\", \"Israel\", \"Italy\", \"Jamaica\", \"Jan Mayen\", \"Japan\", \"Jarvis Island\", \"Jersey\", \"Johnston Atoll\", \"Jordan\", \"Juan de Nova Island\", \"Kazakhstan\", \"Kenya\", \"Kiribati\", \"Korea, North\", \"Korea, South\", \"Kuwait\", \"Kyrgyzstan\", \"Laos\", \"Latvia\", \"Lebanon\", \"Lesotho\", \"Liberia\", \"Libya\", \"Liechtenstein\", \"Lithuania\", \"Luxembourg\", \"Macau\", \"Macedonia, Former Yugoslav Republic of\", \"Madagascar\", \"Malawi\", \"Malaysia\", \"Maldives\", \"Mali\", \"Malta\", \"Man, Isle of\", \"Marshall Islands\", \"Martinique\", \"Mauritania\", \"Mauritius\", \"Mayotte\", \"Mexico\", \"Micronesia, Federated States of\", \"Midway Islands\", \"Moldova\", \"Monaco\", \"Mongolia\", \"Montserrat\", \"Morocco\", \"Mozambique\", \"Namibia\", \"Nauru\", \"Nepal\", \"Netherlands\", \"Netherlands Antilles\", \"New Caledonia\", \"New Zealand\", \"Nicaragua\", \"Niger\", \"Nigeria\", \"Niue\", \"Norfolk Island\", \"Northern Mariana Islands\", \"Norway\", \"Oman\", \"Pakistan\", \"Palau\", \"Panama\", \"Papua New Guinea\", \"Paraguay\", \"Peru\", \"Philippines\", \"Pitcaim Islands\", \"Poland\", \"Portugal\", \"Puerto Rico\", \"Qatar\", \"Reunion\", \"Romainia\", \"Russia\", \"Rwanda\", \"Saint Helena\", \"Saint Kitts and Nevis\", \"Saint Lucia\", \"Saint Pierre and Miquelon\", \"Saint Vincent and the Grenadines\", \"Samoa\", \"San Marino\", \"Sao Tome and Principe\", \"Saudi Arabia\", \"Scotland\", \"Senegal\", \"Seychelles\", \"Sierra Leone\", \"Singapore\", \"Slovakia\", \"Slovenia\", \"Solomon Islands\", \"Somalia\", \"South Africa\", \"South Georgia and South Sandwich Islands\", \"Spain\", \"Spratly Islands\", \"Sri Lanka\", \"Sudan\", \"Suriname\", \"Svalbard\", \"Swaziland\", \"Sweden\", \"Switzerland\", \"Syria\", \"Taiwan\", \"Tajikistan\", \"Tanzania\", \"Thailand\", \"Tobago\", \"Toga\", \"Tokelau\", \"Tonga\", \"Trinidad\", \"Tunisia\", \"Turkey\", \"Turkmenistan\", \"Tuvalu\", \"Uganda\", \"Ukraine\", \"United Arab Emirates\", \"United Kingdom\", \"Uruguay\", \"USA\", \"Uzbekistan\", \"Vanuatu\", \"Venezuela\", \"Vietnam\", \"Virgin Islands\", \"Wales\", \"Wallis and Futuna\", \"West Bank\", \"Western Sahara\", \"Yemen\", \"Yugoslavia\", \"Zambia\", \"Zimbabwe\");\n\n\n\nfunction populateCountries(countryElementId, stateElementId) {\n    // given the id of the <select> tag as function argument, it inserts <option> tags\n    var countryElement = document.getElementById(countryElementId);\n    countryElement.length = 0;\n    countryElement.options[0] = new Option('Select Country', '-1');\n    countryElement.selectedIndex = 0;\n    for (var i = 0; i < country_arr.length; i++) {\n        countryElement.options[countryElement.length] = new Option(country_arr[i], country_arr[i]);\n    }\n\n}","$(document).ready(function() {\n\n    var map = 'lithuania.svg';\n\n    for(var i = 0; i < 2; i++){\n        var mapId = i;\n        $('#map' + i).mapSvg({\n            source: '/maps/geo-calibrated/' + $('#map' + i).attr('country') + '.svg',\n            responsive: 1,\n            zoom: {on:0},\n            scroll: {on:0},\n            menu: {on: 1, containerId: 'mapsvg-menu'},\n            multiSelect: true,\n            colors: {\n                baseDefault: \"#e5e5e5\",\n                background: \"rgba(238,238,238,0)\",\n                selected: 30,\n                hover: 18,\n                base: \"#a18c8c\",\n                stroke: \"#ffffff\"\n            },\n            popovers: {mode: function(){\n                selectedRegions(this)\n            }, on: true, priority: \"local\"},\n            afterLoad: function(){\n                var mapsvg = this;\n\n                for(var j = 0; j < parseInt($('#map_regions_selected').html()); j++){\n                    mapsvg.selectRegion($('#map_region' + j).html());\n                }\n            }\n        });\n    }\n\n    $('#country').live('change', function(){\n        addCountry($(this).val().toLowerCase().replace(/\\s/g, \"-\"), $(this).val());\n    });\n\n    $('.removeButton').live('click', function(){\n        deleteCountry($(this).attr('country'));\n        $(this).remove();\n        return false;\n    });\n\n    populateCountries(\"country\");\n\n\n    function selectedRegions(region){\n        //alert(region.id + \" \" + region.title);\n        if(region.selected) {\n            addRegion(region.id, region.title);\n        } else {\n            removeRegion(region.id);\n        }\n    }\n\n    function addCountry(name, realName){\n        $('div#'+name).remove();\n\n        $('#maps').append('<div id=\"map'+ ($(\".map\").length + 1) +'\" country=\"'+name+'\" class=\"mapsvg mapsvg-responsive map\" style=\"width: 350px\"></div><div country=\"'+name+'\">' + realName +' <a href=\"movers/preferences/remove/country/'+name+'\" country=\"'+name+'\" class=\"btn small green removeButton\">remove</a></div>')\n\n        var mapNr = $(\".map\").length;\n\n        $('#map' + mapNr).mapSvg({\n            source: '/maps/geo-calibrated/' + name + '.svg',\n            responsive: 1,\n            zoom: {on:0},\n            scroll: {on:0},\n            menu: {on: 1, containerId: 'mapsvg-menu'},\n            multiSelect: true,\n            colors: {\n                baseDefault: \"#e5e5e5\",\n                background: \"rgba(238,238,238,0)\",\n                selected: 30,\n                hover: 18,\n                base: \"#a18c8c\",\n                stroke: \"#ffffff\"\n            },\n            popovers: {mode: function(){\n                selectedRegions(this)\n            }, on: true, priority: \"local\"}\n        });\n    }\n\n    function deleteCountry(name){\n        $(\"input[value='\"+name+\"']\").each(function(){\n            $(this).parent().remove();\n        });\n        $('div[country=\"'+name+'\"]').remove();\n        $('.hidden-items').append('<div class=\"deleted_country\" id=\"'+name+'\"><input type=\"hidden\" name=\"country_delete[]\" value=\"'+name+'\"></div>');\n    }\n\n    function addRegion(id, title){\n\n        $('.hidden-items').append('<div id=\"'+id+'\"><input type=\"hidden\" name=\"region_name[]\" value=\"'+title+'\">' +\n        '<input type=\"hidden\" name=\"identifier[]\" value=\"'+id+'\">' +\n        '<input type=\"hidden\" name=\"country[]\" value=\"'+id.substring(0, 2)+'\">' +\n        '<input type=\"hidden\" name=\"user_id[]\" value=\"'+userId+'\"> </div>');\n    }\n\n    function removeRegion(id){\n        $('div#'+id).remove();\n    }\n\n\n\n});"]}